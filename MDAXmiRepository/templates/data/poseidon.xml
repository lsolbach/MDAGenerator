<?xml version="1.0" encoding="UTF-8"?>
<!-- generated by openMDX XMI UML Model Interchange Writer -->
<!--
 Please note:
 This XMI contains extensions that are specific for Poseidon for UML_
 - since Poseidon has no support for qualifiers, these are stored in the
   association end name
   (i.e. roleName [qualifier1: qualifierType1; qualifier2: qualifierType2])
 - the tagged value 'exceptions' is used to list the exceptions that an
   operation can throw
-->
<XMI 
  xmlns='http://soulspace/XMI' 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation='http://soulspace/XMI ./xmi.xsd' 
  xmlns:UML='UML' 
  xmi.version = '1.2' >
	<XMI.header>
		<XMI.documentation>
			<XMI.exporter>openMDX XMI UML Model Interchange Writer</XMI.exporter>
			<XMI.exporterVersion>1.0</XMI.exporterVersion>
		</XMI.documentation>
	</XMI.header>
	<XMI.content>
		<UML:Model xmi.id = '_0' name = 'models' isSpecification = 'false'
			isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
			<UML:Namespace.ownedElement>
				<UML:Stereotype xmi.id = '_1' name = '0..1'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_2' name = '1..1'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_3' name = '0..n'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_4' name = 'list'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_5' name = 'set'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_6' name = 'sparsearray'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_7' name = 'stream'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_8' name = 'map'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Attribute</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_9' name = '0..1'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_10' name = '1..1'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_11' name = '0..n'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_12' name = 'list'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_13' name = 'set'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_14' name = 'sparsearray'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_15' name = 'stream'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_16' name = 'map'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Parameter</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_17' name = 'primitive'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>DataType</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_18' name = 'struct'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_19' name = 'alias'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_20' name = 'root'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_21' name = 'role'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Class</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:Stereotype xmi.id = '_22' name = 'exception'
					 visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
					isAbstract = 'false'>
					<UML:Stereotype.baseClass>Operation</UML:Stereotype.baseClass>
				</UML:Stereotype>
				<UML:TagDefinition xmi.id = '_23' name = 'derived'
					isSpecification = 'false' tagType = 'String'>
					<UML:TagDefinition.multiplicity>
						<UML:Multiplicity xmi.id = '_24'>
							<UML:Multiplicity.range>
								<UML:MultiplicityRange xmi.id = '_25' lower = '1'
									upper = '1'/>
							</UML:Multiplicity.range>
						</UML:Multiplicity>
					</UML:TagDefinition.multiplicity>
				</UML:TagDefinition>
				<UML:TagDefinition xmi.id = '_26' name = 'maxLength'
					isSpecification = 'false' tagType = 'String'>
					<UML:TagDefinition.multiplicity>
						<UML:Multiplicity xmi.id = '_27'>
							<UML:Multiplicity.range>
								<UML:MultiplicityRange xmi.id = '_28' lower = '1'
									upper = '1'/>
							</UML:Multiplicity.range>
						</UML:Multiplicity>
					</UML:TagDefinition.multiplicity>
				</UML:TagDefinition>
				<UML:TagDefinition xmi.id = '_29' name = 'exceptions'
					isSpecification = 'false' tagType = 'String'>
					<UML:TagDefinition.multiplicity>
						<UML:Multiplicity xmi.id = '_30'>
							<UML:Multiplicity.range>
								<UML:MultiplicityRange xmi.id = '_31' lower = '1'
									upper = '1'/>
							</UML:Multiplicity.range>
						</UML:Multiplicity>
					</UML:TagDefinition.multiplicity>
				</UML:TagDefinition>
				<UML:TagDefinition xmi.id = '_32' name = 'documentation'
					isSpecification = 'false' tagType = 'String'>
					<UML:TagDefinition.multiplicity>
						<UML:Multiplicity xmi.id = '_33'>
							<UML:Multiplicity.range>
								<UML:MultiplicityRange xmi.id = '_34' lower = '1'
									upper = '1'/>
							</UML:Multiplicity.range>
						</UML:Multiplicity>
					</UML:TagDefinition.multiplicity>
				</UML:TagDefinition>
				<UML:Package xmi.id = '_35' name = 'net' visibility = 'public'
					isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
					<UML:Namespace.ownedElement>
						<UML:Package xmi.id = '_36' name = 'rfc' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Class xmi.id = '_37' name = 'MimeType' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_38' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
							</UML:Namespace.ownedElement>
						</UML:Package>
					</UML:Namespace.ownedElement>
				</UML:Package>
				<UML:Package xmi.id = '_40' name = 'org' visibility = 'public'
					isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
					<UML:Namespace.ownedElement>
						<UML:Package xmi.id = '_41' name = 'oasis_open' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Class xmi.id = '_42' name = 'xri' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_43' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
							</UML:Namespace.ownedElement>
						</UML:Package>
						<UML:Package xmi.id = '_44' name = 'iso' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Class xmi.id = '_45' name = 'Currency' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_46' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
								<UML:Class xmi.id = '_47' name = 'Language' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_48' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
								<UML:Class xmi.id = '_49' name = 'Sex' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_50' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
							</UML:Namespace.ownedElement>
						</UML:Package>
						<UML:Package xmi.id = '_51' name = 'un' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Class xmi.id = '_52' name = 'Country' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
									isActive = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_19'/>
									</UML:ModelElement.stereotype>
									<UML:Classifier.feature>
										<UML:Attribute xmi.id = '_53' name = 'org::w3c::string'
											visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
											changeability = 'changeable'>
											<UML:StructuralFeature.type>
												<UML:DataType xmi.idref = '_39'/>
											</UML:StructuralFeature.type>
										</UML:Attribute>
									</UML:Classifier.feature>
								</UML:Class>
							</UML:Namespace.ownedElement>
						</UML:Package>
						<UML:Package xmi.id = '_54' name = 'w3c' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:DataType xmi.id = '_55' name = 'anyURI'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_56' name = 'binary'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_57' name = 'boolean'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_58' name = 'date'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_59' name = 'dateTime'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_60' name = 'decimal'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_61' name = 'duration'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_62' name = 'integer'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_63' name = 'long'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_64' name = 'short'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
								<UML:DataType xmi.id = '_39' name = 'string'
									visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
									isAbstract = 'false'>
									<UML:ModelElement.stereotype>
										<UML:Stereotype xmi.idref = '_17'/>
									</UML:ModelElement.stereotype>
								</UML:DataType>
							</UML:Namespace.ownedElement>
						</UML:Package>
						<UML:Package xmi.id = '_65' name = 'omg' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Package xmi.id = '_66' name = 'primitiveTypes' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_67' name = 'AggregationKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_68' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_69' name = 'AttributeMode' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_70' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_71' name = 'DefinitionKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_72' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_73' name = 'EvaluationKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_74' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_75' name = 'MultiplicityType' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_76' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_77' name = 'OperationMode' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_78' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_79' name = 'ParameterDirection' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_80' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_81' name = 'PrimitiveKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_82' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_83' name = 'ScopeKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_84' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_85' name = 'VisibilityKind' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_86' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_87' name = 'any' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_88' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_89' name = 'model1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_90' name = 'AliasType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_91'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_92'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_93' name = 'Association'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_94' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An association defines a classification over a set of links, through a relationship between Classifiers. Each link which is an instance of the association denotes a connection between object instances of the Classifiers of the Association. The MOF restricts associations to binary, restricting each link to two participating objects. This restriction also means that the association is defined between two Classifiers (which may be the same Classifier). The name of the Association is considered directional if itprovides a clearer or more accurate representation of the association when stated with one participating class first rather than the other. For instance, Operation CanRaise Exception is correct; Exception CanRaise Operation is incorrect. &lt;p&gt;The definition of an Association requires two AssociationEnds. If the name of the association is directional, the name is understood to read in the order: first contained element; association name; second contained element. These contained elements are AssociationEnd instances, and the reading of the subject; verb; object uses either the AssociationEnd name or the AssociationEnd&apos;s class name. The onus is on the MOF user to determine whether the name is directional, and to place the AssociationEnds in proper order within the Association&apos;s contents to support the name direction. The representation of a Classifier&apos;s knowledge of its participation in an association requires the use of a Reference.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_95'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_96' name = 'isDerived'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_97' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>A derived association has no Links as instances. Instead, its Links are derived from other information in a meta-model. The addition, removal, or modification of a derived Association&apos;s Link causes the information upon which the Association isderived to be updated. The results of such an update are expected to appear, upon subsequent access of the derived Association&apos;s Links, to have the same effect as an equivalent operation on an Association which is not derived.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_98' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_99' name = 'AssociationEnd'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_100' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An association is composed of two AssociationEnds. Each AssociationEnd defines a Classifier participant in the Association, the role it plays, and constraints on sets of the Classifier instances participating. An instance of an AssociationEnd is a LinkEnd,which defines a relationship between a link, in instance of an Association, and an instance of the AssociationEnd&apos;s Classifier, provided in its type attribute.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_101'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_102' name = 'aggregation'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_103' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Certain associations define aggregations - directed associations with additional semantics. When an AssociationEnd is defined as composite or shared, the instance at &apos;this&apos; end of a Link is the composite or aggregate, and the instance at the &apos;other&apos; end is the component or subordinate..</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_104' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_67'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_105' name = 'isChangeable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_106' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The isChangeable attribute restricts the capability to perform actions that would modify sets of instances corresponding to this AssociationEnd (the same sets to which multiplicity is applied). Specifically, the set may be created when theinstance defining the set - the instance at the opposite end of the Links - is created. This attribute does not make the set immutable. Instead, it affects the generation of operations in Model Elaboration which would allow modification of the set. For IDL generation, the only operation that allows the set to be modified would be one or more factory operations that create the instance and create the set. The modeler is free to define specific operations that allow modification of the set. Note that defining this AssociationEnd with isChangeable equals false places restrictions on the changeability of the other AssociationEnd, due to their interdependence.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_107' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_108' name = 'isNavigable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_109' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The isNavigable attribute determines whether or not the AssociationEnd supports link &apos;navigation&apos;. This has two implications:&lt;ul&gt;&lt;li&gt;A Class defined with an appropriate Reference supports navigation of links from one Class instance to another. If isNavigable is false for an AssociationEnd, no such References may be created.&lt;/li&gt;&lt;li&gt;Setting isNavigable to false also suppress a mapping&#8217;s mechanisms for indexing linksbased on this AssociationEnd.&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_110' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_111' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_112' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Multiplicity defines constraints on sets of instances. Each instance of the Classifier defined by the opposite AssociationEnd&apos;s type defines a set which this multiplicity attribute constrains. Given one of those instances, x, the set is defined as the instances connected by LinkEnds of this AssociationEnd to that instance x. In its use is describing AssociationEnds, isUnique has been constrained to be true, as a simplification. This constraint means that the same two instances cannot participate in more than one Link while participating under the same AssociationEnd. Normally, two instances cannot be linked by more than one Link of an Association at all. But when the AssociationEnd types allow the two instances switch ends, they can form a secondLink without violating the isUnique constraint.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_113' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_75'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_114' name = 'qualifierName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_115' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_116' name = 'Attribute'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_117' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An Attribute defines a StructuralFeature which contains values for Classifiers or their instances.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_118'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_119' name = 'isDerived'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_120' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>A derived attribute is one whose values are not part of the state of the object instance, but whose values can be determined or computed. In a sense, all attributes are derived, since it is up to the class&apos;s implementation to hold or calculate the values. However, by convention, isDerived indicates that the derived state is based on other information in the model. Modification of the derived Attribute causes the information upon which the Attribute is derived to be updated.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_121' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_122' name = 'maxLength'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_123' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_126' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_125'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_124'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_128' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_127'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_124'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_124' name = 'BehaviouralFeature'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_129' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A BehavioralFeature defines a dynamic characteristic of the ModelElement that contains it. Because a BehavioralFeature is partially defined by the Parameters it contains, it is both a Feature and a Namespace.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_130'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_131'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_132' name = 'CanRaise'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_133' name = 'exception'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_134'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_135' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_127'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_136' name = 'operation'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_137'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_138' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_125'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_139' name = 'Class'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_140' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Class defines a classification over a set of object instances by defining the behavior they exhibit. This behavior is represented through operations, attributes, references, participation in associations, nested classes, constants, and constraints. Although the same or similar elements are used in other environments for representing Classes and their implementations, in the MOF these elements specify the class characteristics in an implementation-independent manner. For instance, defining a Class as having an attribute does not require the implementation of the Class (the software which provides the conformant behavior) to have an attribute, to hold the attribute value, etc. The implementation simply must insure that the behavior conforms to the definition of the attribute. The use of all the additional elements beyond operations provides a much richer environment for defining Class Behavior. Likewise, this construct is not an interface. Its expressibility goes beyond interface representations. The MOF&apos;s IDL translation capabilities map a single Class onto two interfaces. It would be possible to define transformations to alternate interface presentations, such as Java&apos;s interfaces.&lt;p&gt;There are, and probably always will be, divergent views among industry leaders on the definition of the concepts of Class, Type, and Interface. As a domain-specific modeling environment, so long as the MOF is clear about the meaning of Class within the MOF, it should remain immune from such concerns.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_141'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_142' name = 'isSingleton'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_143' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>When isSingleton is true, at most one M1 level instance of this Class may exist within the M1-level extent of the Class.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_144' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_141' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_139'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_145'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_95' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_93'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_145'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_147' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_145'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_145' name = 'Classifier'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_148' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A classifier provides a classification of instances through a set of Features it contains.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_149'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_150' name = 'externalizeClassifier'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_151' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>externalizeClassifier() is a MOF extension. It externalizes the classifier for the given schema. Supported schemas are:&lt;ul&gt;&lt;li&gt;org::w3c::xsd&lt;/li&gt;&lt;li&gt;org::omg::idl&lt;/li&gt;&lt;li&gt;com::csg::pli&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_152' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_153'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_154' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_155'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_156' name = 'ClassifierDefinesTypedElement'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_157' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Link between a TypedElement subclass and a Classifier supports the definition of the TypedElement.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_158' name = 'classifies'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_159' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The set of typed elements supported by a Classifier.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_160'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_161' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_162'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_163' name = 'type'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_164' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The type defining the TypedElement. Provides the representation of the type supporting the TypedElement through this reference.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_165'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_166' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_145'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_153' name = 'ClassifierExternalizeClassifierParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_167' name = 'schema'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_168' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_155' name = 'ClassifierExternalizeResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_169' name = 'classifierDefinition'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_170' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_171' name = 'CollectionType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_172'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_173'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_174' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_175' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_75'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_176' name = 'Constant'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_177' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>This Class provides a mechanism for defining constant values of simple data types, in the support of model development.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_178'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_179' name = 'constValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_180' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>This Attribute gives the value of the constant.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_181' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_182' name = 'Constraint'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_183' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Constraint defines a rule that restricts the state or behavior of one or more elements in the meta-model. When a Constraint is attached to a ModelElement, the rule it encodes applies to all relevant instances of the ModelElement in a model.&lt;p&gt;A Constraint rule, represented by the &apos;expression&apos; attribute, may be encoded in any form. The &apos;language&apos; attribute may be used to denote the language and encoding scheme used.&lt;p&gt;While some Constraints on a model may need to be treated as invariant, it is often convenient for other Constraints to be relaxed, for instance while a model is being edited. While, the &apos;evaluationPolicy&apos; attribute is used to represent these two cases, this information is at best advisory, since the MOF specification does not currently state how and when Constraints should be enforced.&lt;p&gt;&lt;h6&gt;Note&lt;/h6&gt;A Constraint cannot over-ride structural integrity rules defined by other parts of a meta-model (e.g., multiplicity specifications) or the integrity rules defined by a particular mapping of the meta-model to implementation technology.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_184'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_185' name = 'evaluationPolicy'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_186' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Each constraint can be defined as immediate or deferred. For immediate Constraints, the constraint violation will be detected and reported within an operation in the chain of operations between the operation initiated by the MOF user and the operation that caused the constraint violation. The effect of an operation that violates an immediate constraint on the state of the object or objects being altered is implementation specific, and possibly undefined. However, if possible, an implementation should reverse the effects of the operation.&lt;p&gt;For deferred Constraints, the constraint violation can only be detected when the Constraint is explicitly evaluated. The MOF defines an operation for such constraint evaluation, the verify operation. When the verify operation is invoked on a Constraint&apos;s container, the constraint is evaluated and a constraint violation isdetected, if present.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_187' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_73'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_188' name = 'expression'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_189' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The Constraint&apos;s expression attribute provides a representation of the constraint. The MOF has no specific requirement to interpret this expression, or to validate it against the language attribute. The specific handling of the expression will necessarily vary with the language used. However, it is expected that for any language an implementation accepts, it will enforce the constraints expressed in that language. The expression can be represented in any format, including text or a composition of objects.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_190' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_191' name = 'language'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_192' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The language representing this Constraint&apos;s expression is defined in this attribute. Since it is a string, most any language can be represented, including format variances in a language (e.g., OCL as text verses OCL as a parse tree).</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_193' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_194' name = 'Contains'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_195' name = 'containerEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_196'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_197' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_198'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_199' name = 'content'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_200'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_201' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_202'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_91' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_90'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_204' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_203'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_206' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_205'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_172' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_171'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_208' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_207'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_146'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_146' name = 'Datatype'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_147'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_210' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_209'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_211' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_198'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_213' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_212'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_215' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_214'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_216' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_184' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_182'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_202' name = 'Element'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_217' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Element classifies the elementary, atomic constructs of models. Element is the root Class within the MOF Model.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_218'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_219' name = 'annotation'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_220' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Provides an informal description of the Element.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_221' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>8000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_222' name = 'name'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_223' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Provides a meta-modeler supplied name that uniquely identifies the Element in the context of the ModelElement&#8217;s containing Namespace. When choosing an Element&#8217;s name, the meta-modeler should consider the rules for translating names into identifiers in the relevant mappings.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_224' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_225' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_226' name = 'qualifiedName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_227' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Provides a unique name for the Element within the context of its outermost containing Package. The qualifiedName is a list of NameType values consisting ofthe names of the Element, its container, its container&#8217;s container and so on until a non-contained element is reached. The first member of the list is the nameof the non-contained element.The &apos;qualifiedName&apos; of an Element is of the form &lt;Segment.name&gt;:&lt;Element.name&gt;. &lt;Segment.name&gt; is the full-qualified package name, i.e. org:omg:model1. Samples for &apos;qualifiedName&apos;:&lt;ul&gt;&lt;li&gt;org:omg:model1:Attribute&lt;/li&gt;&lt;li&gt;org:openmdx::audit2:UnitOfWork&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_228' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_229' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_230' name = 'stereotype'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_231' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_232' name = 'ElementContainedIn'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_233' name = 'container'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_234'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_235' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_198'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_236' name = 'contentEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_237'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_238' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_202'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_207' name = 'EnumerationType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_208'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_239' name = 'label'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_240' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_127' name = 'Exception'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_128'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_241' name = 'Exposes'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_242' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Reference defines a reference for a Class. For an instance of that class, which holds one or more links to some object or objects conforming to the reference, the instance will be playing the role (end) defined by the AssociationEnd in this Association. Although this association can be derived in the current MOF, the use of n-ary associations, where a single Class has multiple ends specification of this Association, is necessary.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_243' name = 'exposedEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_244' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The exposedEnd of a Reference is the AssociationEnd representing the end of the Reference&apos;s owning Classifier within the defining Association.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_245'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_246' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_99'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_247' name = 'referrer'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_248' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The Reference that is providing the exposedEnd&#8217;s class instances within the Reference&#8217;s Classifier.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_249'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_250' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_251'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_253' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_252'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_209'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_130' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_124'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_209'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_209' name = 'Feature'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_254' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Feature defines a characteristic of the ModelElement that contains it. Specifically, Classifiers are defined largely by a composition of Features.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_210'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_255' name = 'scope'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_256' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The scope defines whether a Feature supports the definition of instances of the Classifier owning the Feature or of the Classifier as a whole. When scope is instanceLevel, the Feature is accessed through instances of the Feature&apos;s owning Classifier; when scope is classifier, the Feature is accessed through the Classifier itself (or through its instances). For StructuralFeatures, a scope of instanceLevel indicates that a value represented by the StructuralFeature is associated with each instance of the Classifier; a scope of classifierLevel indicates that theStructuralFeature value is shared by the Classifier and all its instances.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_257' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_83'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_258' name = 'visibility'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_259' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>In the future, this Attribute will be used to limit the ability of Elements outside of this Feature&#8217;s container to make use of it. The rules of visibility of MOF Elements are not currently specified.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_260' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_85'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_261' name = 'FeatureDefinedBy'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_262' name = 'feature'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_263'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_264' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_209'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_265' name = 'generalizableElement'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_266'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_267' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_149' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_145'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_268'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_270' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_269'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_268'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_268' name = 'GeneralizableElement'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_271' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The GeneralizableElement Class classifies and characterizes Elements that can be generalized through supertyping and specialized through subtyping. A GeneralizableElement inherits the features of each of its supertypes, the features of the supertypes of the immediate supertypes, and so on (in other words all the features of the transitive closure of all the supertypes of the GeneralizableElement).&lt;p&gt;When a GeneralizableElement inherits a feature, that feature name effectively becomes part of the namespace for the GeneralizableElement and the feature is considered part of the extended namespace of the Namespace. Therefore, a GeneralizableElement cannot have a superclass if it causes an inherited feature to have a namespace collision with its own features [The names of the contents of a GeneralizableElement should not collide with the names of the contents of any direct or indirect supertype.].&lt;p&gt;To the degree that a GeneralizableElement is defined by its features, the superclass/subclass association defines substitutability. Any instance of a GeneralizableElement can be supplied wherever an instance of a superclass of that GeneralizableElement is expected.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_272'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_273' name = 'isAbstract'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_274' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Indicates whether the GeneralizableElement is expected to have instances. When isAbstract is true, any instance that is represented or classified by this GeneralizableElement is additionally an instance of some specialization of this GeneralizableElement. No operation that supports creation of instances of this GeneralizableElement should be available.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_275' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_276' name = 'visibility'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_277' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>In the future, this Attribute will be used to limit the ability of Elements outside of this GeneralizableElement&#8217;s container to depend on it. The rules of visibility of MOF Elements are not currently specified.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_278' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_85'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_279' name = 'GeneralizableElementHasAllSubtype'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_280' name = 'allSubtypeEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_281'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_282' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_283' name = 'allSupertype'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_284'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_285' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_286' name = 'GeneralizableElementHasAllSupertype'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_287' name = 'allSubtype'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_288'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_289' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_290' name = 'allSupertypeEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_291' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Identifies the set of superclasses for a GeneralizableElement.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_292'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_293' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_294' name = 'Generalizes'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_295' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The Association defined on GeneralizableElement. A Link of this Association represents a supertype/subtype relationship (or a generalizes/specializes relationship).</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_296' name = 'subtypeEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_297' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The subtype is the GeneralizableElement that is more specific. The supertype Generalizes the subtype.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_298'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_299' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_300' name = 'supertype'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_301' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The subtype is the GeneralizableElement that is more specific. The supertype Generalizes the subtype.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_302'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_303' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_212' name = 'Import'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_304' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An Import allows a Package to make use of Elements defined in some other Namespace. An Import object is related to another Namespace via the Aliases association. When a Package contains an Import object, it imports the associatedNamespace. This means that ModelElements defined within the imported Namespace are visible in the importing Package.&lt;p&gt;An Import allows the visibility of the imported Package&apos;s contained ModelElements to be further restricted. An Import object represents either Package importing or Package clustering, depending on the &apos;isClustered&apos; attribute.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_213'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_305' name = 'isClustered'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_306' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The isClustered flags determines whether the Import object represents simple Package importation, or Package clustering.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_307' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_308' name = 'visibility'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_309' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>In the future, this Attribute will modify the visibility of imported Elements in the context of the importing Namespace.  The MOF rules of visibility are not currently specified.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_310' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_85'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_311' name = 'IsParameterOf'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_312' name = 'operation&#10;[index:org::w3c::integer]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_313'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_314' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_124'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_315' name = 'parameter'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_316'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_317' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_318'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_319' name = 'IsQualifiedByType'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_320' name = 'associationEnd&#10;[index:org::w3c::integer]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_321'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_322' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_99'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_323' name = 'qualifierType'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_324'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_325' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_145'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_272' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_268'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_198'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_131' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_124'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_198'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_198' name = 'Namespace'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_326' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The Namespace Class classifies and characterizes Elements that can contain other Elements. Along with containing the Elements, a Namespace defines a namespace, the allowable set of names and the naming constraints, for these elements.&lt;p&gt;Subclasses of the Namespace Class have mechanisms for effectively extending their namespace, without actually containing additional Elements. Thus Namespace can be viewed in terms of its two roles, as a container and as a namespace mechanism. Because only subclasses extend the namespace, the namespace and contents are coincident in the definition of the Namespace Class. Each Namespace has four collections (the latter three derivable) that are used in the MOF Model&#8217;s Constraints. These collections are:&lt;ul&gt;&lt;li&gt;The contents (also called the direct contents), which are defined by the contentsreference.&lt;/li&gt;&lt;li&gt;All contents, the transitive closure on the contents reference.&lt;/li&gt;&lt;li&gt;The extended namespace (the contents plus elements included by extension), whichNamespace subclasses accomplish through generalization and importation.&lt;/li&gt;&lt;li&gt;The extended contents (the transitive closure on the contents reference applied tothe extended namespace).&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_211'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_327' name = 'findElementsByType'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_328' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Returns all the Elements identified by the contents reference defined for this Namespace that are of the Class supplied. The returned list of Elements is a subset of the Elements contained by this Namespace. This operation can either return only those Elements that exactly match the specified class or those Elements that are instances of the specified class and one or more of its subclasses.&lt;p&gt;Because Element is an abstract class, invoking this operation with the ofType argument specified as Element and the includeSubtypes argument set to false returns an empty list. Because Element is the base type for all instances that can be contained by a Namespace, invoking the operation with the ofType argument specified as Element, and includeSubtypes set to true, returns all the contained elements of the Namespace.Returns all the ModelElements identified by the contents reference defined for thisNamespace that are of the Class supplied. The returned list of ModelElements is a subset ofthe ModelElements contained by this Namespace. This operation can either return onlythose ModelElements that exactly match the specified class or those ModelElements thatare instances of the specified class and one or more of its subclasses.Because ModelElement is an abstract class, invoking this operation with the ofTypeargument specified as ModelElement and the includeSubtypes argument set to false returnsan empty list. Because ModelElement is the base type for all instances which can becontained by a Namespace, Invoking the operation with the ofType argument specified asModelElement, and includeSubtypes set to true, returns all the contained elements of theNamespace.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_329' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_330'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_331' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_332'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_333' name = 'lookupElement'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_334' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Searches for an element contained by this Namespace whose name is precisely equal (as a string) to the supplied name. The operation either returns an Element that satisfies the above, or raises ServiceException (NameNotFound).</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_335' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_336'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_337' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_338'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_339' name = 'resolveQualifiedName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_340' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Searches for an Element contained within this Namespace that is identified by the supplied qualifiedName. The qualifiedName is interpreted as a &apos;path&apos; starting from this Namespace.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_341' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_342'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_343' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_344'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_345' name = 'NamespaceContainsAllElement'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_346' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Delivers all model elements which are in the recursive closure of the package:- all elements contained in the package- all elements imported from another package- all referenced classes (supertype, etc) which are not imported by a package import.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_347' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_23'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_348' name = 'allNamespace&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_349'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_350' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_198'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_351' name = 'allNamespaceContent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_352'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_353' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_202'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_354' name = 'NamespaceContainsElement'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_355' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_23'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_356' name = 'namespace&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_357'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_358' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_198'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_359' name = 'namespaceContent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_360'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_361' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_202'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_330' name = 'NamespaceFindElementsByTypeParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_362' name = 'includeSubtypes'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_363' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_364' name = 'ofType'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_365' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_332' name = 'NamespaceFindElementsByTypeResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_366' name = 'result'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_367' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_202'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_368' name = 'NamespaceImportedBy'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_369' name = 'importedByNamespace'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_370'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_371' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_212'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_372' name = 'importedNamespace'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_373' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The Import knows about the Namespace that it references.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_374'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_375' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_198'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_336' name = 'NamespaceLookupElementParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_376' name = 'name'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_377' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>unqualified name of the model element to lookup.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_378' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_338' name = 'NamespaceLookupElementResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_379' name = 'result'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_380' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_202'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_342' name = 'NamespaceResolveQualifiedNameParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_381' name = 'qualifiedName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_382' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_344' name = 'NamespaceResolveQualifiedNameResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_383' name = 'result'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_384' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_202'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_125' name = 'Operation'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_385' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An Operation defines a dynamic feature which offers a service. The behavior of an operation is activated through the invocation of the operation.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_126'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_386' name = 'isQuery'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_387' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Defining an Operation with an isQuery value of true denotes that the behavior of the operation will not alter the state of the object. The state of a Classifier, for this definition, is the set of values of all of the Classifier&apos;s class-scope and instance-scope StructuralFeatures.&lt;p&gt;For instance, an Operation of a Class, defined with a scope of instance, will not change the values or instances of any instance-scope StructuralFeature of the Class instance, as a result of invoking this Operation. An Operation of a Class with ascope of classifier will not change the values or instances of any of the classifier-scope StructuralFeatures or instance-scope StructuralFeatures.&lt;p&gt;This attribute does not define a constraint enforced by the model, but rather a promise that the operation&apos;s implementation is expected to uphold. An operation which is not defined as isQuery equals false is not guaranteed to change the state of its object. The isQuery constraint does not proscribe any specific implementation, so long as the definition of isQuery above is observed.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_388' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_389' name = 'semantics'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_390' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_269' name = 'Package'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_391' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A package is formed as a composition of ModelElements. A package defines a modeling unit, models are constructed and presented as packages. A model is a package. Packages are also uses as organizational constructs in modeling. Nesting,importation, and generalization are used to manage the complexity of models.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_270'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_392' name = 'externalizePackage'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_393' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Externalize the Package and all of its Elements (transitive closure on the containment hierarchy) into a Java Archive byte stream.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_394' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_396' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_397'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_397' name = 'PackageExternalizeResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_398' name = 'packageAsJar'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_399' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_56'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_318' name = 'Parameter'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_400' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A parameter provides a means of communication with operations and other BehavioralFeatures. A parameter passes or communicates values of its defined type.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_401'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_402' name = 'direction'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_403' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>This attribute specifies the purpose of the parameter; to input a value, to output a value, both purposes, or to provide an operation return value.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_404' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_79'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_405' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_406' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Multiplicity defines cardinality constraints on the set of instances or values that a Parameter can hold. Multiplicity defines a lower and upper bound on the set, although the upper bound can be specified as Unbounded.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_407' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_75'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_205' name = 'PrimitiveType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_206'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_251' name = 'Reference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_408' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Reference defines a Classifier&apos;s knowledge of, and access to, links and their instances defined by an Association. Although a Reference derives much of its state from a corresponding AssociationEnd, it provides additional information; therefore, the MOF cannot adequately represent some meta-models without this mechanism. The inherited attributes defined in StructuralFeature (multiplicity and isChangeable) are constrained to match the values of its corresponding AssociationEnd. However, it has its own visibility, name, and annotation defined.&lt;p&gt;&lt;h6&gt;Note&lt;/h6&gt; When creating a Reference, values for the inherited attributes of multiplicity and isChangeable must be supplied. These must be the same as the corresponding attributes on the AssociationEnd to which the Reference will subsequently be linked. </UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_409'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_410' name = 'referencedEndIsNavigable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_411' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_412' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_413' name = 'ReferencesByComposition'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_414' name = 'classifier'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_415'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_416' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_145'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_417' name = 'compositeReference'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_418'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_419' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_251'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_420' name = 'RefersTo'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_421' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A Reference derives most of its state from the AssociationEnd that it is linked to, based on this Association. For a Class defined with a Reference, each of its instances can be used to access the referenced object or objects. Those referenced objects will be of the Class defined by this referencedEnd AssociationEnd, playing the defined end.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_422' name = 'referencedEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_423' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The referencedEnd of a Reference is the end representing the set of LinkEnds of principle interest to the Reference. The Reference provides access to the instances of that AssociationEnd&apos;s class, which are participants in that AssociationEnd&apos;s Association, connected through that AssociationEnd&apos;s LinkEnds. In addition, the Reference derives the majority of its state information - multiplicity, etc., from that Reference.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_424'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_425' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_99'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_426' name = 'referent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_427' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The Reference which is providing the reference through which instances playing the end-defined by the AssociationEnd can be accessed.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_428'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_429' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_251'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_430' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_431' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Each segment contains exactly one model package.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_432'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_433' name = 'beginImport'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_434' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_435' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_436' name = 'endImport'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_437' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_438' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_439' name = 'SegmentContainsElement'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_440' name = 'element'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_441'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_442' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_202'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_443' name = 'segment&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_444'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_445' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_430'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_446' name = 'Specializes'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_447' name = 'subtype'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_448'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_449' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_450' name = 'supertypeEnd'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_451'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_452' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_268'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_118' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_116'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_252'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_409' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_251'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_252'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_252' name = 'StructuralFeature'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_453' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A StructuralFeature defines a static characteristic of the ModelElement that contains it. The attributes and references of a Class define structural properties, which provide for the representation of the state of its instances.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_253'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_454'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_455' name = 'isChangeable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_456' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The isChangeable attribute places restrictions on the use of certain operations, which could change the set of values or instances of the StructuralFeature, and on the operations that will get generated in IDL or other language generation. For any elaboration, no means are automatically created which provides a means of altering the attribute value. When IDL is generated, for instance, the operations,which are normally generated for changing the StructuralFeature, will not be generated. However, isChangeable does not actually constrain the StructuralFeature to make it immutable. Any operations explicitly defined in a model may change the StructuralFeature values or instances (assuming the operation would have otherwise been able to do so).</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_457' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_458' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_459' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Multiplicity defines constraints on the collection of instances or values that a StructuralFeature can hold. Multiplicity defines a lower and upper bound to the cardinality of the collection, although the upper bound can be specified as Unbounded.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_460' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_75'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_461' name = 'StructureField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_462' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The StructureField class is used to specifiy the fields of a StructureType instance.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_463'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_464' name = 'maxLength'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_465' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_466' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_467' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_75'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_203' name = 'StructureType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_204'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_214' name = 'Tag'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_215'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_468' name = 'tagValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_469' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_92' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_90'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_101' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_99'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_454' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_252'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_401' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_318'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_463' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_461'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_173' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_171'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_178' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_176'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_162'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_162' name = 'TypedElement'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_470' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The TypedElement type is an abstraction of Elements that require a type as part of their definition. A TypedElement does not itself define a type, but is associated with a Classifier.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_216'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
							</UML:Namespace.ownedElement>
						</UML:Package>
						<UML:Package xmi.id = '_471' name = 'openmdx' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Package xmi.id = '_472' name = 'generic1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_473' name = 'BooleanProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_474'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_475' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_476' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_477' name = 'DecimalProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_478'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_479' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_480' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_481' name = 'IntegerProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_482'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_483' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_484' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_474' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_473'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_485'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_482' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_481'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_485'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_478' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_477'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_485'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_487' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_486'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_485'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_489' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_488'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_485'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_485' name = 'Property'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_490' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_491' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_492' name = 'PropertySet'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_493' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>If a class is a subclass of PropertySet one is able to attach typed name/list pairs to it via the &quot;property&quot; reference.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_494' name = 'PropertySetHasProperties'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_495' name = 'property'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_496'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_497' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_485'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_498' name = 'propertySet&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_499'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_500' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_492'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_486' name = 'StringProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_487'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_501' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_502' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_488' name = 'UriProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_489'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_503' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_504' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_55'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_505' name = 'compatibility' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Package xmi.id = '_506' name = 'view1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Association xmi.id = '_507' name = 'ObjectHasView'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_508' name = 'object&#10;[namespace:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_509'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_510' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_511'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_512' name = 'view'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_513'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_514' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_515'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Generalization xmi.id = '_517' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_516'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_515'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_515' name = 'View'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_518' name = 'namespace'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_519' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_520' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_522' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_521'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_511'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_524' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_523'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_511'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_526' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_525'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_511'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_511' name = 'ViewCapable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_527' name = 'runtime1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_528' name = 'Domain'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_529'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_530' name = 'DomainHostsNamespace'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_531' name = 'domain&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_532'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_533' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_528'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_534' name = 'namespace'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_535'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_536' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_537'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_538' name = 'Instance'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_539'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_540' name = 'transactionPolicy'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_541' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Valid transaction policies are &quot;ManagingTransaction&quot;, &quot;JoiningTransaction&quot;, &quot;IgnoringTransaction&quot; and &quot;NoOrNewTransaction&quot;.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_542' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_543' name = 'InstanceHasStatistics'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_544' name = 'instance&#10;[layer:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_545'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_546' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_538'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_547' name = 'statistics'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_548'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_549' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_550'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_551' name = 'InstanceServesNamespace'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_552' name = 'instance'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_553'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_554' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_538'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_555' name = 'namespace&#10;[id:org::openmdx::base::uuid]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_556'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_557' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_537'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_537' name = 'Namespace'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_558'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_559' name = 'exposedPath'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_560' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_3'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_55'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_561' name = 'Segment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_562'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_563' name = 'SegmentContainsDomain'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_564' name = 'domain'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_565'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_566' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_528'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_567' name = 'segment&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_568'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_569' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_561'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_550' name = 'Statistics'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_570' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>A statistic object is created when an instance is started. To calculate the average count one can use its object_createdAt and object_modifiedAt attribute along with the corresponding counter.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_571'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_572' name = 'batchCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_573' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_574' name = 'exceptionCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_575' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>The operation is used as index for the exceptionCount attribute</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_576' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_3'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_577' name = 'operationCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_578' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>The operation is used as index for the operationCount attribute</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_579' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_3'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_580' name = 'processingTime'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_581' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_61'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_582' name = 'replyObjectCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_583' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>The operation is used as index for the replyObjectCount attribute</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_584' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_3'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_585' name = 'requestCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_586' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_587' name = 'unitOfWorkCount'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_588' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_63'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_589' name = 'state1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Association xmi.id = '_590' name = 'BasicObjectHasHistoryState'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_591' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Find mit dem Referenzfilter &quot;&lt;objectPath&gt;/historyState&quot; gibt die Stati des Objekts nach object_modifiedAt sortiert zurueck. Sie koennen beispielsweise mit &quot;THERE_EXISTS object_modifiedAt | object_modifiedAt IS_BETWEEN [&lt;begin&gt;, &lt;end&gt;]&quot; eingeschraenkt werden. Der Kontext requestedAt wird hierbei ignoriert.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_592' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_593' name = 'historyState'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_594'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_595' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_597' name = 'historyStateOfObject&#10;[stateQualifier:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_598'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_599' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_600' name = 'BasicObjectHasState'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_601' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Find mit dem Referenzfilter &quot;&lt;objectPath&gt;/state&quot; gibt die Stati des Objekts nach object_modifiedAt, object_validFrom sortiert zurueck. Weitere Einschr&#228;nkungen sind sowohl mit object_validFrom, object_validTo als auch mit object_modifiedAt, object_invalidatedAt m&#246;glich.Beide Kontext requestedFor, requestedAt werden ignoriert.Der Qualifier &quot;stateQualifier&quot; erlaubt den direkten Zugriff auf einen beliebigen State. Er setzt sich folgendermassen zusammen: &quot;&lt;requestedAt-Date&gt;:&lt;requestedFor-Date&gt;&quot;.  </UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_602' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_603' name = 'state'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_604'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_605' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_606' name = 'stateOfObject&#10;[stateQualifier:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_607'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_608' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_609' name = 'BasicObjectHasValidState'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_610' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Find mit dem Referenzfilter &quot;&lt;objectPath&gt;/validState&quot; gibt die Stati des Objekts nach object_validFrom sortiert zurueck. Sie koennen beispielsweise mit &quot;THERE_EXISTS object_validFrom | object_validFrom IS_GREATER_OR_EQUAL [&lt;begin&gt;] AND FOR_ALL object_validTo | object_validTo IS_LESS_OR_EQUAL [&lt;end&gt;]&quot; eingeschraenkt werden. Der Kontext requestedFor wird hierbei ignoriert.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_611' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_612' name = 'validState'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_613'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_614' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_615' name = 'validStateOfObject&#10;[stateQualifier:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_616'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_617' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_596'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Generalization xmi.id = '_619' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_618'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_596'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_621' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_620'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_596'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_596' name = 'State'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_622' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>&lt;h6&gt;State Pattern&lt;/h6&gt;&lt;ul&gt;&lt;li&gt;Der Zugriff auf ein Objekt geschieht ueber die normalen Referenzen und Qualifier.  Zur Auswahl des Objekt-States wird implizit der Request-Context (requestedAt, requestedFor) verwendet. Ist kein Request-Context gesetzt wird requestedAt=requestedFrom=currentDateTime gesetzt.&lt;/li&gt;&lt;li&gt;Der Zugriff auf einzelne Objekt-States geschieht ueber Reference &apos;historyState&apos; und &apos;validState&apos;. Der Qualifier ist von der Form &amp;lt;requestedFor&amp;gt;[:&amp;lt;requestedAt&amp;gt;]. Dies gilt fuer find(), get(), create(), remove() und update() Operationen.&lt;/li&gt;&lt;li&gt;&apos;requestedFor&apos; definiert den Zeitpunkt des gewuenschten States. &apos;requestedAt&apos; definiert den Abfragezeitpunkt.&lt;/li&gt;&lt;li&gt;Die Implementation erfolgt durch einen generischen MODEL-Layer erfolgen, der den Qualifier ergaenzt um object_validFrom und object_createdAt und update()-Operationen ersetzt durch create()-Operationen.&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_623' name = 'object_invalidatedAt'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_624' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_625' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_626' name = 'object_validFrom'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_627' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_628' name = 'object_validTo'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_629' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_630' name = 'statedObject'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_631' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_632' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:Class xmi.idref = '_596'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_633' name = 'underlyingState'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_634' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_635' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_55'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_636' name = 'role1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Association xmi.id = '_637' name = 'ObjectHasRole'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_638' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_639' name = 'core&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'aggregate' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_640'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_641' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_642'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_643' name = 'role'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_644'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_645' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_642'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_642' name = 'Role'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_646' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>&lt;h6&gt;Role Pattern&lt;/h6&gt;&lt;ul&gt;&lt;li&gt;The Management of Roles must be performed through the derived role reference. Roles can not be managed on the &apos;byValue&apos; object reference.&lt;/li&gt;&lt;li&gt;SpiceRole is abstract and must have a concrete subtype. In this case the subtype supports the role pattern.&lt;/li&gt;&lt;li&gt;get() operations on the role reference return the role-specific attributes of the object only. The semantics is defined by the derived reference.&lt;/li&gt;&lt;/ul&gt;See &lt;a href=&quot;http://st-www.cs.uiuc.edu/users/hanmer/PLoP-97/Proceedings/riehle.pdf&quot;&gt;The Role Object Pattern&lt;/a&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_647' name = 'object_hasRole'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_648' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>holds all the roles the object has. </UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_649' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_650' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_5'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_651' name = 'object_inRole'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_652' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>the roles the object is in now.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_653' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_654' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_5'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_655' name = 'roleType'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_656' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_657' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:Class xmi.idref = '_658'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_658' name = 'RoleType'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_659' name = 'coreRole'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_660' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_661' name = 'audit1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_516' name = 'Auditable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_517'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_662' name = 'Involved'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_663' name = 'modifiedFeature'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_664' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_665' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_5'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_666' name = 'taskId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_667' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_668' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_669' name = 'unitOfWorkId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_670' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_671' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_672' name = 'InvolvedHasView'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_673' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_674' name = 'involved&#10;[namespace:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'aggregate' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_675'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_676' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_662'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_677' name = 'view'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_678'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_679' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_523'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_680' name = 'ObjectInvolvedInUnitOfWork'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_681' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_682' name = 'auditable&#10;[unitOfWorkId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_683'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_684' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_516'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_685' name = 'involved'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_686'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_687' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_662'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_688' name = 'Segment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_689'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_690' name = 'SegmentContainsUnitOfWork'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_691' name = 'segment&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_692'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_693' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_688'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_694' name = 'unitOfWork'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_695'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_696' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_697'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_697' name = 'UnitOfWork'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_698'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_699' name = 'taskId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_700' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_701' name = 'unitOfWorkId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_702' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_703' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_704' name = 'UnitOfWorkInvolvesObject'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_705' name = 'involved'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_706'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_707' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_662'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_708' name = 'unitOfWork&#10;[index:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_709'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_710' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_697'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
											</UML:Namespace.ownedElement>
										</UML:Package>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_711' name = 'container2' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Generalization xmi.id = '_714' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_713'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_712'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_712' name = 'Cabinet'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_715' name = 'CabinetContainsLink'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_716' name = 'cabinet&#10;[uid:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_717'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_718' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_712'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_719' name = 'link'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_720'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_721' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_722'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_723' name = 'CabinetContainsNode'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_724' name = 'cabinet&#10;[uid:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_725'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_726' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_712'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_727' name = 'node'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_728'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_729' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_730'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_731' name = 'ChildHasParent'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_732' name = 'linkToChild'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_733'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_734' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_722'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_735' name = 'parent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_736'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_737' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_738'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_738' name = 'Container'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_739'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_742' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_741'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_740'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_740' name = 'Leaf'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_743'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_722' name = 'Link'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_744' name = 'name'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_745' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The name must be a valid XRI path segment</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_746' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_747' name = 'tag'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_748' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_743' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_740'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_730'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_739' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_738'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_730'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_730' name = 'Node'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_749' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_750' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_751' name = 'tag'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_752' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_753' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_754' name = 'uri'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_755' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The derived ath value is a n XRI local-path consisting of the nodes&apos; name preceeded by its acnhestors&apos; names as segments.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_756' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_757' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_55'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_758' name = 'ParentHasChild'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_759' name = 'child'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_760'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_761' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_730'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_762' name = 'linkToParent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_763'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_764' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_722'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_765' name = 'role2' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_766' name = 'RoleType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_767' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Subclasses of RoleType have shared associations with the corrsponding RoleCapable classes allowing alternate keys and access paths. </UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_768' name = 'state2' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_769' name = 'Stated'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_770' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Stated objects are identified by their standard access path. Its state is selected by the InteractionSpec&apos;s &apos;requestedFor&apos; and &apos;requestedAt&apos; values which default to the current time point.&lt;p&gt;Another state may be accessed by overriding the InteractionSpec&apos;s values:&lt;ul&gt;&lt;li&gt;xri:@openmdx:...;requestedAt=...&lt;/li&gt;&lt;li&gt;xri:@openmdx:...;requestedFor=...&lt;/li&gt;&lt;li&gt;xri:@openmdx:...;requestedAt=...;requestedFor=...&lt;/li&gt;&lt;/ul&gt;</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_771'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_772' name = 'invalidatedAt'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_773' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_774' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_775' name = 'requestedAt'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_776' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>&apos;requestedAt&apos; defines the query time point.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_777' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_778' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_779' name = 'requestedFor'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_780' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>&apos;requestedFor&apos; defines the validity time point.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_781' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_782' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_783' name = 'stateId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_784' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_785' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_786' name = 'validFrom'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_787' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_788' name = 'validTo'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_789' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_790' name = 'audit2' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_791' name = 'Audited'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_792'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_793' name = 'InvolvedObjectHasAfterImage'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_794' name = 'afterImage'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_795'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_796' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_797'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_798' name = 'involvedAsAfterImage'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_799'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_800' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_801'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_802' name = 'InvolvedObjectHasBeforeImage'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_803' name = 'beforeImage'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_804'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_805' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_797'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_806' name = 'involvedAsBeforeImage'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_807'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_808' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_801'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_801' name = 'Involvement'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_809' name = 'modifiedFeature'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_810' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_811' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_812' name = 'ObjectIsInvolvedInUnitOfWork'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_813' name = 'audited&#10;[unitOfWorkId:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_814'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_815' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_791'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_816' name = 'involvement'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_817'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_818' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_801'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_819' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_820'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_821' name = 'SegmentContainsUnitOfWork'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_822' name = 'segment&#10;[unitOfWorkId:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_823'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_824' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_819'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_825' name = 'unitOfWork'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_826'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_827' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_525'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_525' name = 'UnitOfWork'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_828'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_526'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_829' name = 'correlationId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_830' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_831' name = 'unitOfWorkId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_832' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_833' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_834' name = 'UnitOfWorkInvolvesObject'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_835' name = 'involvement'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_836'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_837' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_801'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_838' name = 'unitOfWork&#10;[involvedObject:org::openmdx::base::ObjectId]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_839'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_840' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_525'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_841' name = 'document2' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_842' name = 'BinaryRevision'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_843'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_844' name = 'content'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_845' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_7'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_56'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_846' name = 'Branch'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_847'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_848' name = 'branchNumber'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_849' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_850' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_851' name = 'name'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_852' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_853' name = 'revisionLimit'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_854' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_856' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_855'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_741'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_741' name = 'Document'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_742'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_857' name = 'DocumentHasRevision'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_858' name = 'document&#10;[revisionNumber:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_859'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_860' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_741'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_861' name = 'revision'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_862'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_863' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_864'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_866' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_865'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_864'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_843' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_842'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_864'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_864' name = 'Revision'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_867'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_868' name = 'contentLanguage'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_869' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_47'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_870' name = 'contentLength'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_871' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_63'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_872' name = 'contentType'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_873' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_37'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_874' name = 'expiresAt'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_875' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_876' name = 'revisionNumber'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_877' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_878' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_879' name = 'tag'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_880' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_881' name = 'RevisionBelongsToBranch'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_882' name = 'branch&#10;[revisionContainer:org::openmdx::document2::Document]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_883'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_884' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_846'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_885' name = 'revision'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_886'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_887' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_864'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_713' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_888'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_714'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_865' name = 'TextRevision'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_866'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_889' name = 'content'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_890' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_7'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_855' name = 'VersionedDocument'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_856'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_891' name = 'VersionedDocumentHasBranch'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_892' name = 'branch'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_893'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_894' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_846'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_895' name = 'document&#10;[branchNumber:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_896'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_897' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_855'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_898' name = 'deployment1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Generalization xmi.id = '_901' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_900'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_899'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_899' name = 'Component'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_902'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_903' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_904' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_905' name = 'registrationId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_906' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_907' name = 'transactionPolicy'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_908' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_909' name = 'Configuration'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_910'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_911' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_912' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_913' name = 'ConfigurationContainsDomain'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_914' name = 'configuration&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_915'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_916' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_909'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_917' name = 'domain'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_918'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_919' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_920'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_921' name = 'Connection'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_922'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_923' name = 'registrationId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_924' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_925' name = 'DatabaseConnector'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_926'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_927' name = 'driver'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_928' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_929' name = 'DatabaseResourceReference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_930' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A database resource reference uses the connection interface java.sql.Connection and the connection factory interface javax.sql.DataSource</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_931'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_900' name = 'Dataprovider'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_901'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_932' name = 'capacityIncrement'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_933' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_934' name = 'deploymentOrder'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_935' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_936' name = 'initialCapacity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_937' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_938' name = 'maximalCapacity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_939' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_940' name = 'DataproviderBooleanProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_941'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_942' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_943' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_944' name = 'DataproviderConnector'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_945'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_946' name = 'DataproviderConnectsToResource'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_947' name = 'resource'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_948'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_949' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_921'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_950' name = 'user&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_951'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_952' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_900'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_953' name = 'DataproviderHasConfiguration'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_954' name = 'dataprovider&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_955'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_956' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_900'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_957' name = 'property'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_958'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_959' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_960'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_961' name = 'DataproviderIntegerProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_962'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_963' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_964' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_965' name = 'DataproviderIsOfType'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_966' name = 'dataprovider'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_967'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_968' lower = '0'
																	upper = '-1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_900'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_969' name = 'dataproviderType'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_970'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_971' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_972'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_974' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_973'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_960'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_941' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_940'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_960'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_962' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_961'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_960'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_960' name = 'DataproviderProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_975'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_976' name = 'DataproviderRequiresResource'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_977' name = 'dataproviderType&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_978'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_979' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_972'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_980' name = 'resourceReference'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_981'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_982' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_983'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_984' name = 'DataproviderResource'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_985'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_986' name = 'DataproviderResourceReference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_987' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>A dataprovider resource reference uses the connection interface org.openmdx.compatibility.base.dataprovider.transport.cci.Dataprovider_1_0Connection and the connection factory interface org.openmdx.compatibility.base.dataprovider.transport.cci.Dataprovider_1ConnectionFactory.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_988'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_973' name = 'DataproviderStringProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_974'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_989' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_990' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_972' name = 'DataproviderType'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_991'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_992' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_993' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_994' name = 'DataproviderTypeBooleanProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_995'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_996' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_997' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_998' name = 'DataproviderTypeHasConfiguration'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_999' name = 'dataproviderType&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1000'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1001' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_972'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1002' name = 'property'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1003'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1004' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1005'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1006' name = 'DataproviderTypeIntegerProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1007'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1008' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1009' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1011' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1010'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1005'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_995' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_994'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1005'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1007' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1006'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1005'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1005' name = 'DataproviderTypeProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1012'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1013' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1014' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1010' name = 'DataproviderTypeStringProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1011'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1015' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1016' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1017' name = 'DeploymentUnit'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1018'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1019' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1020' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1021' name = 'DeploymentUnitContainsComponent'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1022' name = 'component'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1023'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1024' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_899'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1025' name = 'module&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1026'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1027' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1028'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1029' name = 'DeploymentUnitContainsModule'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1030' name = 'deploymentUnit&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1031'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1032' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1017'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1033' name = 'module'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1034'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1035' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1028'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_920' name = 'Domain'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1036' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>id=&lt;usageType&gt;:&lt;tier&gt;An application environment is partitioned into channels (C)and tiers (T). o Channels are used for partitioning user-groupso Tiers are used for layering the applicationChannels and tiers span an environment into a two-dimensionalspace of domains: D = C x T.       t0      t1    ...   tn     c0  c0-t0  c0-t1   ...  c0-tn  c1  c1-t0  c1-t1   ...  c1-tn  c2  c2-t0  c2-t1   ...  c2-tn  ...  ...    ...    ...   ...  cn  cn-t0  cn-t1   ...  cn-tnExample:C = {b2c, b2e}T = {presentation, frontlogic, dataprovider}The set of domains D = C x T is then as follows:D = {  b2c-p, b2c-f, b2c-dp, b2e-p, b2e-f, b2e-dp}.To be more general, the domains of an application environment can be defined as follows:D = Union(Ci x Ti).Example:C0 = {c0 = b2c, c1 = b2e}T0 = {presentation, frontlogic}D = {b2c-p, b2c-f, b2e-p, b2e-f}</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1037'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1038' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1039' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1040' name = 'DomainContainsDeploymentUnit'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1041' name = 'deploymentUnit'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1042'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1043' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1017'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1044' name = 'domain&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1045'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1046' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_920'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1047' name = 'GenericResourceReference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1048'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1049' name = 'connectionFactoryInterface'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1050' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1051' name = 'connectionInterface'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1052' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1053' name = 'HttpUrlConnector'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1054'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1057' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1056'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1055'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1055' name = 'InboundCommunication'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1058'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1028' name = 'Module'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1059'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1060' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1061' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1062' name = 'ModuleContainsResourceAdapter'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1063' name = 'module&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1064'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1065' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1028'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1066' name = 'resourceAdapter'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1067'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1068' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1069'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_1072' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1071'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1070'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1074' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1073'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1070'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1070' name = 'OutboundCommunication'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1075' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>The resource is identified by an URI according to RFC 2396 (http://www.ietf.org/rfc/rfc2396.txt)</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1076'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1077' name = 'connectionFactoryImplementation'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1078' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1079' name = 'connectionImplementation'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1080' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1081' name = 'uri'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1082' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_55'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1076' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1070'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1069'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1058' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1055'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1069'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1069' name = 'ResourceAdapter'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1083'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1084' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1085' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1086' name = 'registrationId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1087' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1088' name = 'ResourceAdapterBooleanProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1089'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1090' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1091' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1092' name = 'ResourceAdapterHasConfiguration'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1093' name = 'property'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1094'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1095' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1096'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1097' name = 'resourceAdapter&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1098'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1099' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1069'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1100' name = 'ResourceAdapterIntegerProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1101'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1102' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1103' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1101' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1100'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1096'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1089' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1088'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1096'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1105' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1104'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1096'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1096' name = 'ResourceAdapterProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1106'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1107' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1108' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1104' name = 'ResourceAdapterStringProperty'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1105'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1109' name = 'value'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1110' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_3'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_931' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_929'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_983'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_988' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_986'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_983'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1048' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1047'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_983'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_983' name = 'ResourceReference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1111'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1112' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1113' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1114' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1115'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_1116' name = 'SegmentContainsConfiguration'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1117' name = 'configuration'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1118'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1119' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_909'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1120' name = 'segment&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1121'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1122' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1114'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1123' name = 'SegmentContainsDataproviderType'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1124' name = 'dataproviderType'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1125'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1126' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_972'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1127' name = 'segment&#10;[id:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1128'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1129' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_909'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_1054' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1053'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1073'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_926' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_925'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1073'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1073' name = 'StatefulConnection'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1130' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Connections based on managed connections should be closed by the client after each request.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1074'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1131' name = 'capacityIncrement'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1132' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1133' name = 'initialCapacity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1134' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1135' name = 'managedConnectionFactoryImplementation'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1136' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1137' name = 'managedConnectionFactoryInterface'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1138' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1139' name = 'maximalCapacity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1140' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_945' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_944'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1071'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1071' name = 'StatelessConnection'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1141' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Stateless connections should be kept by the client througout its lifetime.The implementation of a stateless connection is allowed to use connections pooling transparently for the cient.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1072'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_985' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_984'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1056'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1056' name = 'StatelessResource'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1057'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1142' name = 'lock1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Generalization xmi.id = '_1145' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1144'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1143'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1143' name = 'Lock'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1146'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1144' name = 'OptimisticLock'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1145'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1147' name = 'digest'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1148' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_56'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1149' name = 'ui1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Generalization xmi.id = '_1152' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1151'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1150'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1154' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1153'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1150'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1156' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1155'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1150'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1150' name = 'AbstractElementDefinition'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1157' name = 'changeable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1158' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1159' name = 'columnBreak'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1160' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1161' name = 'decimalPlaces'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1162' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1163' name = 'displayValueExpr'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1164' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1165' name = 'filterable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1166' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1167' name = 'hasThousandsSeparator'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1168' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1169' name = 'iconKey'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1170' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1171' name = 'inPlace'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1172' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1173' name = 'increment'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1174' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1175' name = 'label'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1176' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1177' name = 'maxLength'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1178' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1179' name = 'maxValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1180' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1181' name = 'minValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1182' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1183' name = 'order'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1184' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1185' name = 'orderFieldGroup'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1186' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1187' name = 'orderObjectContainer'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1188' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1189' name = 'sizeXWeight'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1190' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1191' name = 'spanRow'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1192' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1193' name = 'titleIndex'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1194' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1195' name = 'toolTip'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1196' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1199' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1198'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1197'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1201' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1200'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1197'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1197' name = 'AbstractField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1202'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1203' name = 'backColor'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1204' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1205' name = 'fontBold'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1206' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1207' name = 'fontColor'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1208' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1209' name = 'fontItalic'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1210' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1211' name = 'fontName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1212' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1213' name = 'fontSize'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1214' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1215' name = 'fontStrikeout'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1216' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1217' name = 'fontUnderline'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1218' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1153' name = 'AdditionalElementDefinition'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1219'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1154'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1155' name = 'AlternateElementDefinition'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1220' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>inherits the type of the parent element definition, i.e. if configured the displayValueExpr must be of the same type as of the parent definition.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1221'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1156'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1222' name = 'AssertableInspector'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1223'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1224' name = 'displayValueExpr'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1225' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1226' name = 'displayValueExpr1'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1227' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1228' name = 'displayValueExpr2'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1229' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1230' name = 'displayValueExpr3'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1231' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1232' name = 'forClass'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1233' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1234' name = 'iconKey'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1235' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1236' name = 'label'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1237' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1238' name = 'toolTip'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1239' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1240' name = 'CheckBox'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1241'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1242' name = 'threeState'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1243' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1244' name = 'CompoundField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1245'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1246'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1249' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1248'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1251' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1250'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1253' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1252'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1255' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1254'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1245' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1244'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1247' name = 'Container'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1256'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1258' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1257'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1252'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1260' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1259'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1252'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1252' name = 'ContainerField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1253'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1261'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_1262' name = 'Contains'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1263' name = 'container&#10;[order:org::w3c::integer]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1264'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1265' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1247'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1266' name = 'member'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1267'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1268' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1269'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1270' name = 'DateField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1271'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1272' name = 'format'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1273' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1274' name = 'maxDate'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1275' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1276' name = 'minDate'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1277' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1278' name = 'DocumentBox'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1279'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1280' name = 'contentType'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1281' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>contentType seehttp://rfc.net/rfc2045.htmlftp://ftp.isi.edu/in-notes/iana/assignments/media-types/media-typescontent := &quot;Content-Type&quot; &quot;:&quot; type &quot;/&quot; subtype                *(&quot;;&quot; parameter)                ; Matching of media type and subtype                ; is ALWAYS case-insensitive.     type := discrete-type / composite-type     discrete-type := &quot;text&quot; / &quot;image&quot; / &quot;audio&quot; / &quot;video&quot; /                      &quot;application&quot; / extension-token     composite-type := &quot;message&quot; / &quot;multipart&quot; / extension-token     extension-token := ietf-token / x-token     ietf-token := &lt;An extension token defined by a                    standards-track RFC and registered                    with IANA.&gt;     x-token := &lt;The two characters &quot;X-&quot; or &quot;x-&quot; followed, with                 no intervening white space, by any token&gt;</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1282' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1283' name = 'inPlace'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1284' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1256' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1247'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1269'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1202' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1197'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1269'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1269' name = 'Element'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1285'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1286' name = 'autoGenerated'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1287' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1288' name = 'changeable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1289' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1290' name = 'iconKey'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1291' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1292' name = 'toolTip'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1293' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1151' name = 'ElementDefinition'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1294'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1152'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1295' name = 'active'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1296' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1297' name = 'ElementDefinitionContainsAdditionalElementDefinition'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1298' name = 'additionalElementDefinition'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1299'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1300' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1153'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1301' name = 'elementDefinition&#10;[id:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1302'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1303' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1151'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1304' name = 'ElementDefinitionContainsAlternateElementDefinition'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1305' name = 'alternateElementDefinition'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1306'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1307' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1155'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1308' name = 'elementDefinition&#10;[id:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1309'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1310' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1151'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_1312' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1250'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1311'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1313' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1257'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1311'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1311' name = 'ElementLayoutDefinition'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1314' name = 'columnBreakAtElement'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1315' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1316' name = 'columnSizeMax'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1317' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1318' name = 'columnSizeMin'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1319' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1320' name = 'verticalFill'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1321' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1257' name = 'FieldGroup'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1322' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Allowed container: TabA  FieldGroup is backed up by exaclty one value object. </UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1258'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1313'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1323' name = 'FixedValueField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1324' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>&apos;valueContainer&apos; is the qualifier/name of an object containing the field values. The value container typically has the properties getEntry() where an Entry has the features &lt;&lt;list&gt;&gt; shortText and &lt;&lt;list&gt;&gt; longText.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1325'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1326' name = 'valueContainer'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1327' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>0 - up-down1 - drop-down2 - radio-button-group</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1328' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1254' name = 'Inspector'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1255'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1329' name = 'forClass'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1330' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1331' name = 'scaleX'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1332' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1333' name = 'scaleY'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1334' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1336' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1198'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1261' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1252'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1198'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1198' name = 'LabelledField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1199'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1337' name = 'label'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1338' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Displayed label of a UIElement. the index </UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1339' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1200' name = 'NonLabelledField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1201'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1340' name = 'NumberField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1341'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1342' name = 'decimalPlaces'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1343' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1344' name = 'hasThousandsSeparator'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1345' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1346' name = 'increment'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1347' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1348' name = 'maxValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1349' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1350' name = 'minValue'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1351' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_60'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1259' name = 'ObjectContainer'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1352' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>An ObjectContainer is backed up by multiple value objects. Multi-valued FieldGroups are typically rendered as tables with rows and columns where each row corresponds to one value object and each column to an attribute of the value object. Other renderings are ListView, IconView, DetailedListView, etc.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1260'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1353'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1356' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1355'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1354'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1353' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1259'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1354'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1354' name = 'ObjectReference'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1357' name = 'qualifierLabel'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1358' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1359' name = 'referenceIsStoredAsAttribute'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1360' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1361' name = 'referenceName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1362' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1363' name = 'referencedTypeName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1364' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1365' name = 'userDefinedQualifier'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1366' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1355' name = 'ObjectReferenceField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1367' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>must support values of type URI, String and Path.</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1356'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1368'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1369' name = 'titleIndex'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1370' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>use inspector title[titleIndex] of referenced object. default value is 0.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1371' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1372' name = 'OperationTab'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1373'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1374' name = 'isQuery'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1375' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1376' name = 'operationName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1377' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1248' name = 'Pane'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1249'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1378' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1379'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_1380' name = 'CanNotCreateInspector'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_22'/>
													</UML:ModelElement.stereotype>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1381' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_1382'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_1383' name = 'assertInspector'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1384' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_1385'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_1386' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_1387' name = 'exportElements'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1388' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_1389'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_1390' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_1391'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1385' name = 'SegmentAssertInspectorParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1392' name = 'forClass'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1393' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1382' name = 'SegmentCanNotCreateInspectorParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1394' name = 'reason'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1395' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1396' name = 'SegmentContainsAssertableInspector'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1397' name = 'assertableInspector'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1398'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1399' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1222'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1400' name = 'segment&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1401'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1402' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1378'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1403' name = 'SegmentContainsElement'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1404' name = 'element'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1405'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1406' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1269'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1407' name = 'segment&#10;[id:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1408'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1409' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1378'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1410' name = 'SegmentContainsElementDefinition'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1411' name = 'elementDefinition'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1412'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1413' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1151'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1414' name = 'segment&#10;[name:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1415'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1416' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1378'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1389' name = 'SegmentExportElementsParams'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1417' name = 'includeAutoGenerated'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1418' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1391' name = 'SegmentExportElementsResult'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1419' name = 'elementsAsXml'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1420' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1373' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1372'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1250'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1250' name = 'Tab'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.taggedValue>
												<UML:TaggedValue xmi.id = '_1421' isSpecification = 'false'>
													<UML:TaggedValue.dataValue>Allowed container: Inspector</UML:TaggedValue.dataValue>
													<UML:TaggedValue.type>
														<UML:TagDefinition xmi.idref = '_32'/>
													</UML:TaggedValue.type>
												</UML:TaggedValue>
											</UML:ModelElement.taggedValue>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1251'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1312'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1422' name = 'title'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1423' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1424' name = 'TextBox'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1425'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1426' name = 'acceptsTab'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1427' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1428' name = 'autoSize'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1429' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1430' name = 'maxLength'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1431' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1432' name = 'multiline'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1433' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1434' name = 'tabStop'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1435' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1436' name = 'textAlign'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1437' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>0 - left1 - centered2 - right</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1438' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_64'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1439' name = 'textContentType'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1440' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>0 - unformatted1 - xml/stylesheet2 - rich text</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1441' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_64'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1442' name = 'wordWrap'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1443' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1444' name = 'TextField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1445'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1368' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1355'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1341' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1340'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1241' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1240'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1445' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1444'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1271' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1270'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1246' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1244'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1425' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1424'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1279' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1278'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1325' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1323'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1335'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1335' name = 'ValuedField'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1336'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1446' name = 'displayValueExpr'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1447' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_4'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1448' name = 'featureName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1449' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1450' name = 'filterable'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1451' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_57'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1452' name = 'multiplicity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1453' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1454' name = 'qualifiedFeatureName'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1455' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1456' name = 'spanRow'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1457' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_62'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1458' name = 'datastore1' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_1459' name = 'Database'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1460'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_1461' name = 'updateNormalizedPaths'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1462' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>This operation updates the redundant  (rid, oid) tuples for paths which are stored in normalized formats. If configured the also the (parent_rid and parent_oid) are updated. The operation is modeled as isQuery=true because no application-level objects are modified.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1463' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_1464' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
												<UML:Operation xmi.id = '_1465' name = 'updatePathComponents'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1466' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Paths are stored in stringified format and in path component format. This operation updates the path components in the REF table. The operation is modeled as isQuery=true because no application-level objects are modified.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1467' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_1468' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1471' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1470'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1469'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1460' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1459'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1469'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1469' name = 'Datastore'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1472'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Operation xmi.id = '_1473' name = 'drop'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false'>
													<UML:BehavioralFeature.parameter>
														<UML:Parameter xmi.id = '_1474' name = 'in'
															isSpecification = 'false' kind = 'in'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
														<UML:Parameter xmi.id = '_1475' name = 'result'
															isSpecification = 'false' kind = 'return'>
															<UML:Parameter.type>
																<UML:Class xmi.idref = '_395'/>
															</UML:Parameter.type>
														</UML:Parameter>
													</UML:BehavioralFeature.parameter>
												</UML:Operation>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1470' name = 'Transient'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1471'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature/>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1476' name = 'base' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Class xmi.id = '_1477' name = 'Authority'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_1478' name = 'AuthorityHasProvider'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1479' name = 'authority&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1480'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1481' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1477'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1482' name = 'provider'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1483'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1484' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1485'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Generalization xmi.id = '_1111' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_983'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_902' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_899'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1083' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1069'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_991' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_972'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1487' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1486'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_910' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_909'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_975' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_960'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1037' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_920'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_218' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_202'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1294' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1151'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_529' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_528'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1106' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1096'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1059' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1028'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_558' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_537'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_539' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_538'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_922' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_921'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1012' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1005'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_571' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_550'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1285' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1269'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_828' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_525'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1219' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1153'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1221' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1155'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1223' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1222'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1018' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1017'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_698' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_697'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_847' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_846'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_771' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_769'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_867' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_864'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_523' name = 'BasicObject'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1488'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1489'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_524'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1490' name = 'createdAt'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1491' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1492' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1493' name = 'createdBy'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1494' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1495' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1496' name = 'modifiedAt'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1497' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1498' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_59'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
												<UML:Attribute xmi.id = '_1499' name = 'modifiedBy'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1500' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1501' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_5'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_1146' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1143'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1502'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1472' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1469'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1502'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_792' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_791'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1502'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1502' name = 'Context'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1503' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_797'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1488' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_797'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_797' name = 'ContextCapable'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Generalization xmi.id = '_1489' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_523'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_1504'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_1504' name = 'ExtentCapable'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1505' name = 'identity'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1506' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1507' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_1508'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1509' name = 'ObjectHasContext'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1510' name = 'context'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1511'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1512' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1502'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1513' name = 'contextCapable&#10;[id:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1514'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1515' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_797'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Association xmi.id = '_1516' name = 'ObjectHasRole'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1517' name = 'core&#10;[roleId:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1518'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1519' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1520'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1521' name = 'role'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1522'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1523' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1520'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1508' name = 'ObjectId' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1524' name = 'org::oasis_open::xri'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:Class xmi.idref = '_42'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Class xmi.id = '_1485' name = 'Provider'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Association xmi.id = '_1525' name = 'ProviderProvidesSegment'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1526' name = 'provider&#10;[qualifiedName:org::w3c::string]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1527'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1528' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1485'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1529' name = 'segment'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1530'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1531' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_521'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_1520' name = 'RoleCapable'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_20'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1532' name = 'roleId'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'frozen'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1533' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The role&apos;s qualified name, e.g. &lt;ol&gt;&lt;li&gt;core&lt;/li&gt;&lt;li&gt;core.A&lt;/li&gt;&lt;li&gt;core.A.B&lt;/li&gt;&lt;/ol&gt;where &quot;core.A.B&quot; is a subrole of &quot;core.A&quot; and &quot;core.A&quot; a subrole of &quot;core&quot;. </UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1534' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1535' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_23'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Generalization xmi.id = '_432' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_430'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_888' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_713'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1537' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1536'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1539' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1538'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_820' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_819'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_562' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_561'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1379' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1378'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1541' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1540'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_689' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_688'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1543' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1542'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1115' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1114'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Generalization xmi.id = '_1545' isSpecification = 'false'>
											<UML:Generalization.child>
												<UML:Class xmi.idref = '_1544'/>
											</UML:Generalization.child>
											<UML:Generalization.parent>
												<UML:Class xmi.idref = '_521'/>
											</UML:Generalization.parent>
										</UML:Generalization>
										<UML:Class xmi.id = '_521' name = 'Segment'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'true' isActive = 'false'>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_1503'/>
											</UML:GeneralizableElement.generalization>
											<UML:GeneralizableElement.generalization>
												<UML:Generalization xmi.idref = '_522'/>
											</UML:GeneralizableElement.generalization>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1546' name = 'description'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1547' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_26'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_1'/>
													</UML:ModelElement.stereotype>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
										<UML:Association xmi.id = '_1548' name = 'SegmentSupportsExtent'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Association.connection>
												<UML:AssociationEnd xmi.id = '_1549' name = 'extent'
													visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
													aggregation = 'none' targetScope = 'instance' changeability = 'frozen'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1550'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1551' lower = '0'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_1504'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
												<UML:AssociationEnd xmi.id = '_1552' name = 'segment&#10;[identity:org::w3c::anyURI]'
													visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
													aggregation = 'aggregate' targetScope = 'instance' changeability = 'changeable'>
													<UML:AssociationEnd.multiplicity>
														<UML:Multiplicity xmi.id = '_1553'>
															<UML:Multiplicity.range>
																<UML:MultiplicityRange xmi.id = '_1554' lower = '1'
																	upper = '1'/>
															</UML:Multiplicity.range>
														</UML:Multiplicity>
													</UML:AssociationEnd.multiplicity>
													<UML:AssociationEnd.participant>
														<UML:Class xmi.idref = '_521'/>
													</UML:AssociationEnd.participant>
												</UML:AssociationEnd>
											</UML:Association.connection>
										</UML:Association>
										<UML:Class xmi.id = '_395' name = 'Void'
											visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
											isAbstract = 'false' isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_18'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature/>
										</UML:Class>
										<UML:Class xmi.id = '_1555' name = 'uuid' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'
											isActive = 'false'>
											<UML:ModelElement.stereotype>
												<UML:Stereotype xmi.idref = '_19'/>
											</UML:ModelElement.stereotype>
											<UML:Classifier.feature>
												<UML:Attribute xmi.id = '_1556' name = 'org::w3c::string'
													visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
													changeability = 'changeable'>
													<UML:StructuralFeature.type>
														<UML:DataType xmi.idref = '_39'/>
													</UML:StructuralFeature.type>
												</UML:Attribute>
											</UML:Classifier.feature>
										</UML:Class>
									</UML:Namespace.ownedElement>
								</UML:Package>
							</UML:Namespace.ownedElement>
						</UML:Package>
					</UML:Namespace.ownedElement>
				</UML:Package>
				<UML:Package xmi.id = '_1557' name = 'de' visibility = 'public'
					isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
					<UML:Namespace.ownedElement>
						<UML:Package xmi.id = '_1558' name = 'corag' visibility = 'public'
							isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
							<UML:Namespace.ownedElement>
								<UML:Package xmi.id = '_1559' name = 'base' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Package xmi.id = '_1560' name = 'typedvalue1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_1561' name = 'BooleanValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1562'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1563'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1564' name = 'booleanValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1565' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1566' name = 'DateValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1567'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1568'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1569' name = 'dateValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1570' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1571' name = 'NumericValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1572'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1573'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1574' name = 'numericValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1575' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1576' name = 'StringValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1577'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1578'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1579' name = 'stringValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1580' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1562' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1561'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1581'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1577' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1576'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1581'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1572' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1571'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1581'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1567' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1566'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1581'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1581' name = 'TypedValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_1582' name = 'dynobject1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_1583' name = 'DynGroup'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1584' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Dynamische Gruppe</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1585'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_1586' name = 'DynGroupHasDynObjects'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1587' name = 'container&#10;[index:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1588'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1589' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1583'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1590' name = 'item'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1591'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1592' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1593'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Generalization xmi.id = '_1595' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1594'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1593'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1597' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1596'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1593'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1585' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1583'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1593'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1599' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1598'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1593'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1601' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1600'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1593'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1593' name = 'DynObject'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1602' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Dynamisches ObjektEin dynamisches Objekt kann mit Attributen und Gruppen erweitert werden.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_1603' name = 'DynObjectHasAttribute'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1604' name = 'attribute'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1605'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1606' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1581'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1607' name = 'container&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1608'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1609' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1593'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1610' name = 'DynObjectHasDynGroup'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1611' name = 'container&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1612'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1613' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1593'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1614' name = 'group'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1615'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1616' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1583'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1617' name = 'DynObjectHasDynObject'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1618' name = 'container&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1619'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1620' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1593'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1621' name = 'object'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1622'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1623' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1593'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_1624' name = 'description1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_1625' name = 'Description'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1626' name = 'long'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1627' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1628' name = 'short'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1629' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1632' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1631'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1630'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1634' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1633'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1630'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1636' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1635'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1630'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1638' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1637'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1630'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1630' name = 'DescriptionContainer'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1639' name = 'administrativeDescription'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1640' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1641' name = 'DescriptionContainerContainsDescription'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1642' name = 'container&#10;[language:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1643'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1644' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1630'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1645' name = 'description'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1646'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1647' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1625'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1648' name = 'DescriptionHasText'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1649' name = 'description&#10;[usage:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1650'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1651' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1625'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1652' name = 'text'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1653'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1654' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1655'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1655' name = 'DescriptionText'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1656' name = 'text'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1657' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_1658' name = 'usagemode1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Generalization xmi.id = '_1660' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1635'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1659'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1659' name = 'MasterDataUsageMode'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1661'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1662' name = 'ProductionDataUsageMode'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1663'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_1665' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1631'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1664'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1664' name = 'StatedProductionDataUsageMode'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1666'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1667'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_1663' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1662'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1668'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1661' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1659'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1668'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1666' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1664'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1668'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1668' name = 'UsageMode'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1669' name = 'usageMode'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1670' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1671' name = 'commission' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Package xmi.id = '_1672' name = 'vorgang1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_1600' name = 'DynTeilergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1601'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1673'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1674'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1596' name = 'DynVermittlerdaten'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1597'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1675'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1676'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1598' name = 'DynVermittlerergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1599'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1677'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1678'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1594' name = 'DynVertragsVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1595'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1679'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1680'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1681'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1682' name = 'DynVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_1683' name = 'ErgebnisHatTeilergebnis'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1684' name = 'ergebnis&#10;[vorgangId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1685'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1686' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1687'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1688' name = 'teilergebnis'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1689'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1690' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1691'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Generalization xmi.id = '_1693' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1692'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1691'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1673' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1600'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1691'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1691' name = 'ITeilergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1694' name = 'berechnungstyp'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1695' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1696' name = 'provision'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1697' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1700' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1699'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1698'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1675' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1596'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1698'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1698' name = 'IVermittlerdaten'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1701' name = 'anteilProvision'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1702' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1703' name = 'vermittlerId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1704' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1706' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1705'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1687'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1677' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1598'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1687'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1687' name = 'IVermittlerergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1707' name = 'provision'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1708' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1709' name = 'provisionHaftzeit'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1710' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1711' name = 'vermittlerId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1712' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1679' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1594'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1713'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1715' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1714'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1713'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1713' name = 'IVertragsVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1716'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1717' name = 'aenderungsgrund'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1718' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1719' name = 'buchungsschluessel'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1720' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1721' name = 'provisionsart'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1722' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1723' name = 'vertragsId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1724' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1725' name = 'wirksamkeitsdatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1726' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1716' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1713'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1727'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1729' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1728'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1727'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1727' name = 'IVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1730' name = 'auskunft'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1731' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1732' name = 'buchungsdatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1733' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1734' name = 'mandantId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1735' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1544' name = 'Segment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1736' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Segment f&#252;r Provisionsvorg&#228;nge.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1545'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Operation xmi.id = '_1737' name = 'getVorgaengeFuerVermittler'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															isQuery = 'true' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
															isAbstract = 'false'>
															<UML:BehavioralFeature.parameter>
																<UML:Parameter xmi.id = '_1738' name = 'in'
																	isSpecification = 'false' kind = 'in'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_1739'/>
																	</UML:Parameter.type>
																</UML:Parameter>
																<UML:Parameter xmi.id = '_1740' name = 'result'
																	isSpecification = 'false' kind = 'return'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_1741'/>
																	</UML:Parameter.type>
																</UML:Parameter>
															</UML:BehavioralFeature.parameter>
														</UML:Operation>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1739' name = 'SegmentGetVorgaengeFuerVermittlerParams'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1742' name = 'beginnDatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1743' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1744' name = 'endeDatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1745' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1746' name = 'vermittlerId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1747' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1748' name = 'SegmentHasVorgang'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1749' name = 'segment&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1750'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1751' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1544'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1752' name = 'vorgang'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1753'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1754' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1728'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1692' name = 'Teilergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1755' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Teilergebnis einer Vorgangsberechnung mit Referenz auf den r&#252;ckgerechneten Vorgang.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1693'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1756'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1757' name = 'bewertung'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1758' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1759' name = 'TeilergebnisRefVorgang'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1760' name = 'teilergebnis'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1761'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1762' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1691'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1763' name = 'vorgang'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1764'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1765' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1727'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1766' name = 'TeilvertragsVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1767' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Vertragsbezogene Provisionsvorg&#228;nge, die sich auf genau einen Vertragsteil beziehen.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1768'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1769' name = 'abgang'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1770' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Kenzeichen zur Anzeige von Vertragsteilabg&#228;ngen.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1771' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1772' name = 'vertragsteilId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1773' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1774' name = 'VermittlerHatKondition'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1775' name = 'kondition'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1776'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1777' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1581'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1778' name = 'vermittler&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1779'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1780' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1781' name = 'VermittlerHatMitverdiener'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1782' name = 'mitverdiener'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1783'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1784' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1785' name = 'vermittler'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1786'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1787' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1788' name = 'VermittlerVerwendetProvisionModel'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1789' name = 'provisionsModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1790'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1791' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1792' name = 'vermittler'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1793'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1794' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1699' name = 'Vermittlerdaten'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1795' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Provisionsrelevante Daten des Vermittlers.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1700'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1796'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1797' name = 'anteilBewertung'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1798' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1799' name = 'vermittlerstatus'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1800' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1801' name = 'vermittlertyp'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1802' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1705' name = 'Vermittlerergebnis'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1803' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Ergebnis der Berechnungen bezogen auf einen Vermittler.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1706'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1804'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1805' name = 'bewertung'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1806' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1807' name = 'bewertungHaftzeit'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1808' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1768' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1766'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1714'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1714' name = 'VertragsVorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1809' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Vertragsbezogene Provisionsvorg&#228;nge</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1715'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1810'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1811' name = 'Vertragsdaten'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1812' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Vertragsbezogene Daten f&#252;r die Provisionsberechnung.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1813'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1814' name = 'gueltigAb'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1815' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1816' name = 'postleitzahl'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1817' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1818' name = 'produktEinheitId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1819' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1820' name = 'versicherungsnehmerId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1821' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1822' name = 'vertragsId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1823' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1824' name = 'waehrung'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1825' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1826' name = 'VertragsteilHatVermittlerergebnis'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1827' name = 'ergebnis'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1828'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1829' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1705'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1830' name = 'vertragsteil&#10;[vermittlerId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1831'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1832' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1833'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1834' name = 'Vertragsteilbewertung'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1833' name = 'Vertragsteildaten'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1835' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Vertragsteilbezogene Daten f&#252;r die Provisionsberechnung.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1836'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1837' name = 'beitragsendedatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1838' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1839' name = 'beitragssumme'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1840' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1841' name = 'geburtsdatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1842' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1843' name = 'geschlecht'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1844' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1845' name = 'jahresbeitrag'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1846' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beitrag f&#252;r das laufende Versicherungsjahr</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1847' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1848' name = 'mitarbeiter'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1849' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1850' name = 'postleitzahl'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1851' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1852' name = 'produktEinheitId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1853' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1854' name = 'versichertePersonId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1855' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1856' name = 'versicherungssumme'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1857' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1858' name = 'vertragsteilId'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1859' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1860' name = 'vorjahresbeitrag'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1861' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beitrag fuer das vorherige Versicherungsjahr</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1862' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1863' name = 'wirksamkeitsdatum'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1864' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1741' name = 'VorgaengeStruct'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1865' name = 'vorgaenge'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1866' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_3'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:Class xmi.idref = '_1728'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1680' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1594'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1728'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1810' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1714'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1728'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1728' name = 'Vorgang'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1867' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Basisklasse f&#252;r Provisionsvorg&#228;nge.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1729'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1868'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1869' name = 'ausloesungszeitpunkt'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1870' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1871' name = 'VorgangHatDirekteVermittler'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1872' name = 'direkteVermittler'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1873'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1874' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1875' name = 'vorgang&#10;[id:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1876'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1877' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1713'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1878' name = 'VorgangHatVermittler'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1879' name = 'vermittler'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1880'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1881' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1698'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1882' name = 'vorgang&#10;[vermittlerId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1883'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1884' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1727'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1885' name = 'VorgangHatVermittlerergebnis'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1886' name = 'ergebnis'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1887'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1888' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1598'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1889' name = 'vorgang&#10;[vermittlerId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1890'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1891' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1594'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1892' name = 'VorgangHatVertragsdaten'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1893' name = 'vertragsdaten'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1894'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1895' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1811'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1896' name = 'vorgang&#10;[vertragsId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1897'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1898' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1714'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1899' name = 'VorgangHatVertragsteildaten'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1900' name = 'vertragsteildaten'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1901'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1902' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1833'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1903' name = 'vorgang&#10;[vertragsteilId:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1904'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1905' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1766'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1906' name = 'VorgangHatVorgaenger'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1907' name = 'vorgaenger'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1908'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1909' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1727'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1910' name = 'vorgang'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1911'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1912' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1727'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_1913' name = 'provisionmodel1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_1914' name = 'ComplexProvisionModel'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1915'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_1917' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1916'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1631'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1915' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1914'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1631'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1631' name = 'ProvisionModel'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1632'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1665'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1918' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1919' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1920' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1921' name = 'ProvisionModelHatAuszahlung'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1922' name = 'auszahlung'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1923'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1924' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1925' name = 'provisionModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1926'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1927' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1928' name = 'ProvisionModelHatBerechnung'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1929' name = 'berechnung'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1930'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1931' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1932' name = 'provisionModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1933'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1934' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1935' name = 'ProvisionModelHatHaftzeit'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1936' name = 'haftzeit'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1937'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1938' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1939' name = 'provisionModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1940'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1941' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1942' name = 'ProvisionModelHatRueckrechnung'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1943' name = 'provisionModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1944'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1945' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1946' name = 'rueckrechnung'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1947'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1948' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1538' name = 'Segment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1539'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_1949' name = 'SegmentHatProvisionModel'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1950' name = 'model'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1951'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1952' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1631'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1953' name = 'segment&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1954'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1955' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1538'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1916' name = 'SimpleProvisionModel'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1917'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_1956' name = 'common' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Package xmi.id = '_1957' name = 'valueContainer1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Generalization xmi.id = '_1960' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1959'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1958'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1962' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1961'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1958'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1958' name = 'AbstractValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1963' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Basisklasse f&#252;r historsiertes und nicht historisiertes Key/Value Paar</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1964' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1965' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Name des Erweiterungs-Wertes.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1966' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1967' name = 'value'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1968' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Inhalt des Erweiterungs-Wertes.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1969' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1970' name = 'AbstrakterValueContainer'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1971' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Container f&#252;r historisierte und nicht historisierte Werte, die einen Objekt angeh&#228;ngt werden k&#246;nnen.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_1972' name = 'codeTableNoStated'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1973' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Name der Codetabelle, der die Namen der zul&#228;ssigen Werte f&#252;r nichthistorisierten Daten enth&#228;lt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1974' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1975' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_1976' name = 'codeTableStated'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1977' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Name der Codetabelle, der die Namen der zul&#228;ssigen Werte f&#252;r historisierten Daten enth&#228;lt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1978' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_1979' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_1980' name = 'ContainerHasStatedValues'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1981' name = 'container&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1982'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1983' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1970'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1984' name = 'statedValue'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1985'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1986' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1959'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_1987' name = 'ContainerHasValues'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_1988' name = 'container&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1989'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1990' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1970'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_1991' name = 'value'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_1992'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_1993' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1961'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1959' name = 'StatedValue'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1994' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Historisiertes Key/Value Paar</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1995'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1960'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1961' name = 'Value'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_1996' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Nicht historisiertes Key/Value Paar</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1997'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1962'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_1998' name = 'generic1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Generalization xmi.id = '_1563' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1561'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1578' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1576'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1813' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1811'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1999' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1633'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1868' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1728'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1573' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1571'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2001' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2000'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1681' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1594'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2002' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_618'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2004' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2003'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2005' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1635'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1756' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1692'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1836' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1833'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1568' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1566'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1796' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1699'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2006' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1637'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1676' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1596'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1997' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1961'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2008' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2007'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1804' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1705'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1678' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1598'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1674' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1600'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2010' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2009'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2012' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2011'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_1486'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_1486' name = 'BasicObject'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2013' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Innerhalb des Projekts werden alle Objekte von diesem Interface abgeleitet, um die M&#246;glichkeit zu haben, hier zus&#228;tzliche f&#252;r alle Klassen g&#252;ltige Attribute einzuf&#252;gen.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1487'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2014' name = 'Path'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2015' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Struktur, die allgemein verwendet werden kann, wenn in Funktionen Objekt-Pfade &#252;bermittelt oder zur&#252;ckgegeben werden sollen.Nicht mehr verwendet!!!</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2016' name = 'path'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2017' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Pfad auf ein Objekt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2018' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_55'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2019' name = 'validityDate'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2020' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------G&#252;ltigkeitszeitpunkt, zu dem das Path &#252;bergeben wird. Wegen Problement mit dateTime in structs, muss das Datum als String im Standard-openMDX Format &#252;bergeben werden.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2021' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_1995' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1959'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_618'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_1667' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_1664'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_618'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_618' name = 'StatedObject'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2022' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung---------------------Alle Historisierten Objekte im Projekt werden von diesem Interface abgeleitet.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2002'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_619'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_2024' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2023'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2003'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_2003' name = 'TimeDependent'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2025' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Innerhalb des Projekts werden alle Objekte, die einen zeitlichen Verlauf haben, von diesem Interface abgeleitet. Die Attribute entsprechen den des State-Interfaces. Im Gegensatz zum State werden die S&#228;tze allerdings nicht historisiert.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2004'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2026' name = 'object_validFrom'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2027' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Beginndatum der fachlichen G&#252;ltigkeit. Datum ist immer einschliesslich, Zeit wird in der Regel auf 0:00 Uhr gesetzt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2028' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2029' name = 'object_validTo'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2030' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Endedatum der fachlichen G&#252;ltigkeit. Datum ist immer ausschliesslich, Zeit wird in der Regel auf 0:00 Uhr gesetzt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2031' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_2032' name = 'parameter1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_2033' name = 'DoubleParameter'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2034' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Parameter f&#252;r Fliesskomma-Werte.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2035'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2036' name = 'doubleValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2037' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Parameterinhalt als Fliesskomma-Wert.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2038' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2039' name = 'GenericParameter'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2040' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------R&#252;ckgabestruktur von getParameter() im ParameterSegment.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2041' name = 'doubleValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2042' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_60'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2043' name = 'integerValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2044' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_62'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2045' name = 'stringValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2046' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2047' name = 'IntegerParameter'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2048' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Parameter f&#252;r Ganzzahlige-Werte.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2049'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2050' name = 'integerValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2051' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Parameterinhalt als Ganzzahliger Wert.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2052' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_62'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Generalization xmi.id = '_2049' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2047'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_620'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2054' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2053'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_620'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2035' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2033'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_620'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2056' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2055'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_620'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_620' name = 'Parameter'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2057' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Basisklasse f&#252;r Parameter. Als fachlicher Schl&#252;ssel f&#252;r Parameter wird der vollqualifizierter Klassenname des Verwenders plus einen  Bezeichner verwendet. Dar&#252;ber l&#228;t sich die Verwendung des entsprechenden Parameters im Code nachvollziehen.Die Ableitung von Parameter enthalten die typisierten Parameterwerte.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_621'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2058' name = 'administrativeDesc'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2059' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Administrative Beschreibung des Parameters. Es soll hier die Semantik des Parameters beschrieben werden.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2060' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2061' name = 'ParameterHasReference'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2062' name = 'actualParameter'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2063'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2064' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_620'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2065' name = 'reference'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2066'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2067' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2055'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2055' name = 'ParameterReference'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2068' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Falls derselbe Parameter in mehreren Klassen verwendet werden muss, kann &#252;ber die Klasse eine Referenz auf den eigentlichen Parameter gezogen werden, der den eigentlichen Wert enth&#228;lt. Dies vermeidet, das derselbe fachliche Parameter mehrfach gef&#252;hrt werden muss.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2056'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1542' name = 'ParameterSegment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2069' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Sollen in einem Data-Provider Parameter verwendet werden, so wird dessen Segment von dieser Klasse abgeleitet. Dies dient dazu, dass Parameter in der Komponente abgelegt werden, in der sie gebraucht werden.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1543'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Operation xmi.id = '_2070' name = 'getParameter'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
															isAbstract = 'false'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2071' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Bechreibung--------------------Zugriff auf einen einzelnen Parameterwert.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:BehavioralFeature.parameter>
																<UML:Parameter xmi.id = '_2072' name = 'in'
																	isSpecification = 'false' kind = 'in'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_2073'/>
																	</UML:Parameter.type>
																</UML:Parameter>
																<UML:Parameter xmi.id = '_2074' name = 'result'
																	isSpecification = 'false' kind = 'return'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_2039'/>
																	</UML:Parameter.type>
																</UML:Parameter>
															</UML:BehavioralFeature.parameter>
														</UML:Operation>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2073' name = 'ParameterSegmentGetParameterParams'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2075' name = 'id'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2076' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2077' name = 'validityDate'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2078' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_59'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2079' name = 'SegmentHasParameter'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2080' name = 'parameter'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2081'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2082' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_620'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2083' name = 'segment&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2084'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2085' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1542'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2053' name = 'StringParameter'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2086' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Parameter f&#252;r String-Werte.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2054'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2087' name = 'stringValue'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2088' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Parameterinhalt als String.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2089' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_2090' name = 'usage1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_2091' name = 'NotificationResult'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2092' name = 'ObjectUser'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2093' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung---------------------Objekt, das andere Objekte nutzt (Nutzer).</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Operation xmi.id = '_2094' name = 'notifyChange'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															isQuery = 'false' concurrency = 'sequential' isRoot = 'false' isLeaf = 'false'
															isAbstract = 'false'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2095' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Methode, die gerufen wird, wenn eine Objektver&#228;nderung stattgefunden hat.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:BehavioralFeature.parameter>
																<UML:Parameter xmi.id = '_2096' name = 'in'
																	isSpecification = 'false' kind = 'in'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_2097'/>
																	</UML:Parameter.type>
																</UML:Parameter>
																<UML:Parameter xmi.id = '_2098' name = 'result'
																	isSpecification = 'false' kind = 'return'>
																	<UML:Parameter.type>
																		<UML:Class xmi.idref = '_2091'/>
																	</UML:Parameter.type>
																</UML:Parameter>
															</UML:BehavioralFeature.parameter>
														</UML:Operation>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2097' name = 'ObjectUserNotifyChangeParams'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_18'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2099' name = 'notifier'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2100' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>1000000</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_55'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2101' name = 'RegisteredObjectUser'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2102' name = 'registration'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2103'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2104' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2023'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2105' name = 'user'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2106'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2107' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2092'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2108' name = 'RegisteredUsedObject'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2109' name = 'registration'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2110'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2111' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2023'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2112' name = 'usedObject'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2113'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2114' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2115'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2116' name = 'SegmentHoldUsageRegistrations'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2117' name = 'registrations'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2118'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2119' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2023'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2120' name = 'segment&#10;[id:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2121'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2122' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1540'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2115' name = 'UsageRegisteredObject'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2123' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Objekt, das von anderen Objekten (Nutzer) genutzt wird, und dessen Verwendung registriert wird.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2023' name = 'UsageRegistration'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2124' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Registrierung von Objektnutzungen.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2024'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2125' name = 'notifyOnChange'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2126' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Objektnutzer wird bei Ver&#228;nderung des benutzten Objekts benachrichtigt.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2127' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2128' name = 'permitChanges'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2129' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------L&#228;t &#196;nderungen am benutzen Objekt zu.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2130' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2131' name = 'permitDelete'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2132' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------L&#228;sst das L&#246;schen/Beenden des Benutzen Objekts zu. Falls diese Option gesetzt ist, muss notifyOnChange ebenfalls gesetzt sein, damit die Referenz im Nutzer-Objekt entfernt werden kann.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2133' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_1540' name = 'UsageSegment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2134' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Segmente von DataProvidern, bei denen die Verwendung von Objekten registriert werden soll werden von diesem Segment abgeleitet.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1541'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
										<UML:Package xmi.id = '_2135' name = 'notiz1' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_2136' name = 'AbstrakterNotizContainer'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'true' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2137' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung----------------------Muster, alle Objekte, die eine Notiz tragen k&#246;nnen, werden von &quot;AbstrakterNotizContainer&quot; abgeleitet.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:ModelElement.stereotype>
														<UML:Stereotype xmi.idref = '_20'/>
													</UML:ModelElement.stereotype>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2011' name = 'Notiz'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2138' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Beschreibung---------------------Die Notiz.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2012'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2139' name = 'notiz'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2140' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Inhalt der Notiz.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2141' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2142' name = 'verwendung'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2143' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Beschreibung----------------------Hinweis wie die Notiz verwendet werden soll.</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2144' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2145' name = 'NotizContainerHatNotizen'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2146' name = 'container&#10;[id:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2147'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2148' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2136'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2149' name = 'notiz'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2150'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2151' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2011'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
											</UML:Namespace.ownedElement>
										</UML:Package>
									</UML:Namespace.ownedElement>
								</UML:Package>
								<UML:Package xmi.id = '_2152' name = 'calc' visibility = 'public'
									isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
									<UML:Namespace.ownedElement>
										<UML:Package xmi.id = '_2153' name = 'param' visibility = 'public'
											isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
											<UML:Namespace.ownedElement>
												<UML:Class xmi.id = '_2154' name = 'BooleanVariable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2155'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1637' name = 'Category'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1638'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2006'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2156' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2157' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2158' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2159' name = 'CategoryHasDomain'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2160' name = 'category&#10;[id:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2161'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2162' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1637'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2163' name = 'domain'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2164'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2165' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1633'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2166' name = 'DateVariable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2167'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1633' name = 'DomainModel'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1634'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1999'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2168' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2169' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2170' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2171' name = 'DomainRefHasDomain'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2172' name = 'domainModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2173'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2174' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1633'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2175' name = 'domainRef'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2176'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2177' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2007'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2007' name = 'DomainReference'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2008'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2178' name = 'Formula'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2179' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>A Formula is a Rule with a mathematical formula.For performance a parsed version of the formula is stored as a serialized syntax tree.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2180'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2181' name = 'formula'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2182' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2183' name = 'syntaxTree'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2184' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_56'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2185' name = 'ModelRule'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2186' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Used to include a ParameterModel as a Rule in another ParameterModel.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2187'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_2188' name = 'NumericVariable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2189'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Class xmi.id = '_1635' name = 'ParameterModel'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2190' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>The ParameterModel represents the Rules and the signature for an instance of the CalculationEngine.  It consists of a set of Rules and a list of Variables.A ParameterModel could be considered as an encapsulated component, which is descripbed by the signature of the Variables. A ParameterModel can be reused as a component in other ParameterModels.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1636'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1660'/>
													</UML:GeneralizableElement.generalization>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2005'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2191' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2192' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2193' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2194' name = 'ParameterModelHasCategory'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2195' name = 'category'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2196'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2197' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1637'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2198' name = 'model'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2199'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2200' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2201' name = 'ParameterModelHasDomainRef'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2202' name = 'domain'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2203'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2204' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2007'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2205' name = 'model&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2206'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2207' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2208' name = 'ParameterModelHasResult'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2209' name = 'parameterModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2210'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2211' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2212' name = 'result'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2213'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2214' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2009'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2215' name = 'ParameterModelHasRules'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2216' name = 'model&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2217'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2218' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2219' name = 'rule'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2220'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2221' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2000'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2222' name = 'ParameterModelHasVariables'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2223' name = 'model&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2224'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2225' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2226' name = 'variable'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2227'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2228' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2009'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2229' name = 'RangeTable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2230' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>RangeTables are used to do a mapping of a range of values to a single value.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2231'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_2187' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2185'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2000'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2180' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2178'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2000'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2233' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2232'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2000'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_2000' name = 'Rule'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2234' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Base class for rules in the calculation engine.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2001'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2235' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2236' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2237' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Association xmi.id = '_2238' name = 'RuleHasModel'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2239' name = 'model'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2240'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2241' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2242' name = 'rule'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2243'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2244' lower = '0'
																			upper = '-1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2185'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2245' name = 'RuleHasOutputVariable'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2246' name = 'outputVar'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2247'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2248' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2009'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2249' name = 'rule'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2250'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2251' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2000'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2252' name = 'RuleReferencesInputVariables'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2253' name = 'inputVar'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2254'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2255' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2009'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2256' name = 'references&#10;[id:org::w3c::integer]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2257'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2258' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_2000'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_1536' name = 'Segment'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_1537'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Association xmi.id = '_2259' name = 'SegmentHasCategory'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2260' name = 'category'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2261'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2262' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1637'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2263' name = 'segment&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2264'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2265' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1536'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2266' name = 'SegmentHasDomainModel'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2267' name = 'domainModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2268'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2269' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1633'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2270' name = 'segment&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2271'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2272' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1536'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Association xmi.id = '_2273' name = 'SegmentHasParameterModel'
													isSpecification = 'false' isRoot = 'false' isLeaf = 'false' isAbstract = 'false'>
													<UML:Association.connection>
														<UML:AssociationEnd xmi.id = '_2274' name = 'parameterModel'
															visibility = 'public' isSpecification = 'false' isNavigable = 'true' ordering = 'unordered'
															aggregation = 'none' targetScope = 'instance' changeability = 'changeable'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2275'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2276' lower = '0'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1635'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
														<UML:AssociationEnd xmi.id = '_2277' name = 'segment&#10;[name:org::w3c::string]'
															visibility = 'public' isSpecification = 'false' isNavigable = 'false' ordering = 'unordered'
															aggregation = 'composite' targetScope = 'instance' changeability = 'frozen'>
															<UML:AssociationEnd.multiplicity>
																<UML:Multiplicity xmi.id = '_2278'>
																	<UML:Multiplicity.range>
																		<UML:MultiplicityRange xmi.id = '_2279' lower = '1'
																			upper = '1'/>
																	</UML:Multiplicity.range>
																</UML:Multiplicity>
															</UML:AssociationEnd.multiplicity>
															<UML:AssociationEnd.participant>
																<UML:Class xmi.idref = '_1536'/>
															</UML:AssociationEnd.participant>
														</UML:AssociationEnd>
													</UML:Association.connection>
												</UML:Association>
												<UML:Class xmi.id = '_2280' name = 'StringVariable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2281'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_2283' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2282'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2232'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2231' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2229'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2232'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_2232' name = 'Table'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2284' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Base class for rules, that read the result from a table. </UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2233'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2285' name = 'reference'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2286' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
												<UML:Class xmi.id = '_2282' name = 'ValueTable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2287' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>ValueTable</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2283'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature/>
												</UML:Class>
												<UML:Generalization xmi.id = '_2155' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2154'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2009'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2167' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2166'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2009'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2189' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2188'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2009'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Generalization xmi.id = '_2281' isSpecification = 'false'>
													<UML:Generalization.child>
														<UML:Class xmi.idref = '_2280'/>
													</UML:Generalization.child>
													<UML:Generalization.parent>
														<UML:Class xmi.idref = '_2009'/>
													</UML:Generalization.parent>
												</UML:Generalization>
												<UML:Class xmi.id = '_2009' name = 'Variable'
													visibility = 'public' isSpecification = 'false' isRoot = 'false' isLeaf = 'false'
													isAbstract = 'false' isActive = 'false'>
													<UML:ModelElement.taggedValue>
														<UML:TaggedValue xmi.id = '_2288' isSpecification = 'false'>
															<UML:TaggedValue.dataValue>Base class for variables.</UML:TaggedValue.dataValue>
															<UML:TaggedValue.type>
																<UML:TagDefinition xmi.idref = '_32'/>
															</UML:TaggedValue.type>
														</UML:TaggedValue>
													</UML:ModelElement.taggedValue>
													<UML:GeneralizableElement.generalization>
														<UML:Generalization xmi.idref = '_2010'/>
													</UML:GeneralizableElement.generalization>
													<UML:Classifier.feature>
														<UML:Attribute xmi.id = '_2289' name = 'domainType'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2290' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Typ des Domainobjekts</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2291' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2292' name = 'input'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2293' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_57'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2294' name = 'name'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'frozen'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2295' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2296' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>true</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_23'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2297' name = 'path'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2298' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Zugriffspfad auf den Wert der Variablen innerhalb des Domainobjekts</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2299' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>200</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
														<UML:Attribute xmi.id = '_2300' name = 'role'
															visibility = 'public' isSpecification = 'false' ownerScope = 'instance'
															changeability = 'changeable'>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2301' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>Rolle des Domainobjekts</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_32'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.taggedValue>
																<UML:TaggedValue xmi.id = '_2302' isSpecification = 'false'>
																	<UML:TaggedValue.dataValue>20</UML:TaggedValue.dataValue>
																	<UML:TaggedValue.type>
																		<UML:TagDefinition xmi.idref = '_26'/>
																	</UML:TaggedValue.type>
																</UML:TaggedValue>
															</UML:ModelElement.taggedValue>
															<UML:ModelElement.stereotype>
																<UML:Stereotype xmi.idref = '_1'/>
															</UML:ModelElement.stereotype>
															<UML:StructuralFeature.type>
																<UML:DataType xmi.idref = '_39'/>
															</UML:StructuralFeature.type>
														</UML:Attribute>
													</UML:Classifier.feature>
												</UML:Class>
											</UML:Namespace.ownedElement>
										</UML:Package>
									</UML:Namespace.ownedElement>
								</UML:Package>
							</UML:Namespace.ownedElement>
						</UML:Package>
					</UML:Namespace.ownedElement>
				</UML:Package>
			</UML:Namespace.ownedElement>
		</UML:Model>
	</XMI.content>
</XMI>
