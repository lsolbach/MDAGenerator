<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	elementFormDefault="qualified" attributeFormDefault="unqualified" 
  xmlns:UML="UML"
	xmlns:UML2="UML2" targetNamespace="UML2">

  <xs:import namespace="UML" schemaLocation="uml.xsd" />

	<xs:element name="BehavioredClassifier.ownedBehavior">
		
	</xs:element>

	<xs:element name="Interaction">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="UML:Classifier.feature" />
				<xs:element ref="UML2:Interaction.fragment" />
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="Interaction.message">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Message"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="Interaction.lifeline">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Lifeline"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="Interaction.fragment">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="InteractionFragment.covered">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="InteractionFragment.lifeline">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Lifeline"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="EventOccurrence">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="InteractionFragment.covered"/>
				<xs:element ref="MessageEnd.sendMessage"/>
				<xs:element ref="MessageEnd.receiveMessage"/>
				<xs:element ref="EventOccurrence.startExec"/>
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="UML:name" />
			<xs:attribute ref="UML:visibility" />
		</xs:complexType>		
	</xs:element>

	<xs:element name="EventOccurrence.startExec">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ExecutionOccurrence"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="ExecutionOccurrence">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="InteractionFragment.covered"/>
				<xs:element ref="ExecutionOccurrence.start"/>
				<xs:element ref="ExecutionOccurrence.finish"/>
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="UML:name" />
			<xs:attribute ref="UML:visibility" />
		</xs:complexType>		
	</xs:element>

	<xs:element name="ExecutionOccurrence.start">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="ExecutionOccurrence.finish">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="Message">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="InteractionFragment.covered"/>
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="UML:name" />
			<xs:attribute ref="UML:visibility" />
			<xs:attribute ref="messageSort" />
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="Message.sendEvent">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence" />
			</xs:choice>
		</xs:complexType>		
	</xs:element>

	<xs:element name="Message.receiveEvent">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence" />
			</xs:choice>
		</xs:complexType>		
	</xs:element>

	<xs:element name="Message.signature">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="UML:Operation" />
			</xs:choice>
		</xs:complexType>		
	</xs:element>

	<xs:element name="Message.argument">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="UML2:OpaqueExpression" />
			</xs:choice>
		</xs:complexType>		
	</xs:element>

	<xs:element name="MessageEnd">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="InteractionFragment.covered"/>
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="UML:name" />
			<xs:attribute ref="UML:visibility" />
		</xs:complexType>		
	</xs:element>
		
	<xs:element name="MessageEnd.sendMessage">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Message"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="MessageEnd.receiveMessage">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Message"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="OpaqueExpression">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="UML:visibility" />
			<xs:attribute ref="UML:body" />
			<xs:attribute ref="UML:language" />
		</xs:complexType>		
	</xs:element>
		
	<xs:element name="Lifeline">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Lifeline.coveredBy"/>
				<xs:element ref="Lifeline.represents"/>
				<xs:element ref="UML:ModelElement.stereotype" />
				<xs:element ref="UML:ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="UML:name" />
			<xs:attribute ref="UML:visibility" />
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="Lifeline.coveredBy">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="EventOccurrence"/>
				<xs:element ref="ExecutionOccurrence"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<xs:element name="Lifeline.represents">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="UML:Attribute"/>
			</xs:choice>
		</xs:complexType>		
	</xs:element>
	
	<!--
		Attribute definitions
	-->
	<xs:attribute name="xmi.id" type="xs:string" />
	<xs:attribute name="xmi.idref" type="xs:string" />
	<xs:attribute name="messageSort" type="messageSortType" />
	
	<!--
		Type definitions
	-->
	<xs:simpleType name="messageSortType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="synchCall" />
			<xs:enumeration value="asynchCall" />
		</xs:restriction>
	</xs:simpleType>


</xs:schema>