<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	elementFormDefault="qualified" attributeFormDefault="unqualified" 
	xmlns:UML="UML" targetNamespace="UML">
	<!--xmlns:UML="UML" targetNamespace="UML" xmlns:XMI="XMI"-->
	<!--xs:import namespace="XMI" schemaLocation="./xmi.xsd"/-->
	<xs:element name="Model">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Namespace.ownedElement" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>
	
	<xs:element name="Namespace.ownedElement">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Package"/>
				<xs:element ref="Class"/>
				<xs:element ref="Interface"/>
				<xs:element ref="Association"/>
				<xs:element ref="Abstraction"/>
				<xs:element ref="DataType"/>
				<xs:element ref="Stereotype"/>
				<xs:element ref="TagDefinition"/>
				<xs:element ref="Generalization"/>
				<xs:element ref="Dependency"/>
				<xs:element ref="Exception"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Package">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="Namespace.ownedElement" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Class">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.clientDependency" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="GeneralizableElement.generalization" />
				<xs:element ref="Classifier.feature" />
				<xs:element ref="Namespace.ownedElement" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
			<xs:attribute ref="isActive" />
		</xs:complexType>
	</xs:element>

	<xs:element name="ModelElement.clientDependency">
		<xs:complexType>
			<xs:choice>
				<xs:element ref="Abstraction" />
				<xs:element ref="Dependency"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="ModelElement.taggedValue">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="TaggedValue" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="ModelElement.stereotype">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Stereotype" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Abstraction">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="Dependency.client" />
				<xs:element ref="Dependency.supplier" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="isSpecification" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Classifier.feature">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Attribute" />
				<xs:element ref="Operation" />
				<xs:element ref="Method" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Method">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="Method.specification"/>
				<xs:element ref="Method.body"/>
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name"/>
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isQuery" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Method.body">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ProcedureExpression" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Method.specification">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Operation" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="ProcedureExpression">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="language" />
			<xs:attribute ref="body" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Attribute">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="StructuralFeature.type" />
				<xs:element ref="StructuralFeature.multiplicity" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="ownerScope" />
			<xs:attribute ref="changeability" />
		</xs:complexType>
	</xs:element>

	<xs:element name="StructuralFeature.type">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Class" />
				<xs:element ref="DataType" />
				<xs:element ref="Interface" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="StructuralFeature.multiplicity">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Multiplicity"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Operation">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="BehavioralFeature.parameter" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
			<xs:attribute ref="isQuery" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="ownerScope" />
			<xs:attribute ref="concurrency" />
		</xs:complexType>
	</xs:element>

	<xs:element name="BehavioralFeature.parameter">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Parameter" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Parameter">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="Parameter.type" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="kind" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Parameter.type">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Class" />
				<xs:element ref="DataType" />
				<xs:element ref="Interface" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Exception">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="A_context_raisedSignal">
		<!-- Poseidon specific -->
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Operation"/>
				<xs:element ref="Method"/>
				<xs:element ref="Exception"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Interface">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.clientDependency" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="GeneralizableElement.generalization" />
				<xs:element ref="Classifier.feature" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Association">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Association.connection" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Association.connection">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="AssociationEnd" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="AssociationEnd">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="AssociationEnd.multiplicity" />
				<xs:element ref="AssociationEnd.participant" />
				<xs:element ref="AssociationEnd.qualifier" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isNavigable" />
			<xs:attribute ref="targetScope" />
			<xs:attribute ref="changeability" />
			<xs:attribute ref="ordering" />
			<xs:attribute ref="aggregation" />
		</xs:complexType>
	</xs:element>

	<xs:element name="AssociationEnd.association">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Association"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="AssociationEnd.qualifier">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Attribute" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="AssociationEnd.multiplicity">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Multiplicity" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Multiplicity">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Multiplicity.range" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Multiplicity.range">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="MultiplicityRange" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="MultiplicityRange">
		<xs:complexType>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="lower" />
			<xs:attribute ref="upper" />
		</xs:complexType>
	</xs:element>

	<xs:element name="AssociationEnd.participant">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Class" />
				<xs:element ref="Interface" />
				<xs:element ref="UseCase" />
				<xs:element ref="Actor" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<!-- TODO complete and include -->
	<xs:element name="AssociationClass">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype"/>
				<xs:element ref="ModelElement.taggedValue"/>
				<xs:element ref="Association.connection"/>
			</xs:choice>
			<xs:attribute ref="xmi.id"/>
			<xs:attribute ref="xmi.idref"/>
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Stereotype">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="Stereotype.baseClass" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Stereotype.baseClass">
		<xs:complexType mixed='true'>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<!--xs:element ref="XMI:XMI.reference" /-->
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Dependency.client">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Interface" />
				<xs:element ref="Class"/>
				<xs:element ref="DataType"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Dependency.supplier">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Interface" />
				<xs:element ref="Class"/>
				<xs:element ref="DataType"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Dependency">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Dependency.supplier"/>
				<xs:element ref="Dependency.client"/>
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="isSpecification" />
		</xs:complexType>
	</xs:element>

	<xs:element name="DataType">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<xs:element name="TagDefinition">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="TagDefinition.multiplicity" />
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="tagType" />
		</xs:complexType>
	</xs:element>

	<xs:element name="TagDefinition.multiplicity">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Multiplicity" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="GeneralizableElement.generalization">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Generalization" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Generalization">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Generalization.parent" />
				<xs:element ref="Generalization.child" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="isSpecification" />
		</xs:complexType>
	</xs:element>

	<xs:element name="Generalization.child">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Class" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="Generalization.parent">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="Class" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="TaggedValue">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.stereotype" />
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="TaggedValue.dataValue" />
				<xs:element ref="TaggedValue.type" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="isSpecification" />
		</xs:complexType>
	</xs:element>

	<xs:element name="TaggedValue.dataValue">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="TaggedValue.type">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="TagDefinition" />
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<!--
		Use Cases	
	-->
	<xs:element name="Actor">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>
	<xs:element name="UseCase">
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="ModelElement.taggedValue" />
				<xs:element ref="ModelElement.stereotype" />
			</xs:choice>
			<xs:attribute ref="xmi.id" />
			<xs:attribute ref="xmi.idref" />
			<xs:attribute ref="name" />
			<xs:attribute ref="visibility" />
			<xs:attribute ref="isSpecification" />
			<xs:attribute ref="isRoot" />
			<xs:attribute ref="isLeaf" />
			<xs:attribute ref="isAbstract" />
		</xs:complexType>
	</xs:element>

	<!--
		Diagram (not supported yet)
	-->
	<xs:element name="Diagram">
		<xs:complexType>
			<xs:sequence>
				<xs:any namespace='http://www.w3.org/namespace/'/>
			</xs:sequence>
			<xs:attribute name='property' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='reference' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='container' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='semanticModel' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='link' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='contained' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='anchorage' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='diagramLink' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='owner' type='xs:IDREFS' use='optional'/>
			<xs:attribute name='isVisible' type='xs:string' use='optional'/>
			<xs:attribute name='position' type='xs:string' use='optional'/>
			<xs:attribute name='size' type='xs:string' use='optional'/>
			<xs:attribute name='name' type='xs:string' use='optional'/>
			<xs:attribute name='zoom' type='xs:string' use='optional'/>
			<xs:attribute name='viewport' type='xs:string' use='optional'/>
			<xs:attribute name='xmi.id' type='xs:ID' use='optional'/>
			<xs:attribute name='xmi.label' type='xs:string' use='optional'/>
			<xs:attribute name='xmi.uuid' type='xs:string' use='optional'/>
			<xs:attribute name='href' type='xs:string' use='optional'/>
			<xs:attribute name='xmi.idref' type='xs:IDREF' use='optional'/>
		</xs:complexType>
	</xs:element>

	<!--
		Attribute definitions
	-->
	<xs:attribute name="xmi.id" type="xs:string" />
	<xs:attribute name="xmi.idref" type="xs:string" />
	<xs:attribute name="name" type="xs:string" />
	<xs:attribute name="visibility" type="visibilityType" />
	<xs:attribute name="ordering" type="orderingType" />
	<xs:attribute name="aggregation" type="aggregationType" />
	<xs:attribute name="ownerScope" type="xs:string" />
	<xs:attribute name="targetScope" type="targetScopeType" />
	<xs:attribute name="changeability" type="changeabilityType" />
	<xs:attribute name="isRoot" type="xs:boolean" />
	<xs:attribute name="isSpecification" type="xs:boolean" />
	<xs:attribute name="isLeaf" type="xs:boolean" />
	<xs:attribute name="isAbstract" type="xs:boolean" />
	<xs:attribute name="isActive" type="xs:boolean" />
	<xs:attribute name="isNavigable" type="xs:boolean" />
	<xs:attribute name="isQuery" type="xs:boolean" />
	<xs:attribute name="lower" type="xs:string" />
	<xs:attribute name="upper" type="xs:string" />
	<xs:attribute name="tagType" type="xs:string" />
	<xs:attribute name="language" type="xs:string" />
	<xs:attribute name="body" type="xs:string" />
	<xs:attribute name="concurrency" type="concurrencyType" />
	<xs:attribute name="kind" type="kindType" />

	<!--
		Type definitions
	-->
	<xs:simpleType name="visibilityType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="public" />
			<xs:enumeration value="protected" />
			<xs:enumeration value="private" />
			<xs:enumeration value="package" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="changeabilityType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="changeable" />
			<xs:enumeration value="frozen" />
			<xs:enumeration value="addOnly" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="orderingType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="unordered" />
			<xs:enumeration value="ordered" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="aggregationType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="none" />
			<xs:enumeration value="aggregate" />
			<xs:enumeration value="composite" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="targetScopeType">
		<xs:restriction base="xs:NMTOKEN">
			<xs:enumeration value="instance" />
			<xs:enumeration value="classifier" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="concurrencyType">
		<xs:restriction base='xs:NMTOKEN'>
			<xs:enumeration value='sequential'/>
			<xs:enumeration value='guarded'/>
			<xs:enumeration value='concurrent'/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="kindType">
		<xs:restriction base='xs:NMTOKEN'>
			<xs:enumeration value='in'/>
			<xs:enumeration value='inout'/>
			<xs:enumeration value='out'/>
			<xs:enumeration value='return'/>
		</xs:restriction>
	</xs:simpleType>
</xs:schema>