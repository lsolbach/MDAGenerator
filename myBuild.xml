<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
	<!ENTITY properties SYSTEM "file:../Build/common.properties">
	<!ENTITY targets SYSTEM "file:../Build/common.targets">
	<!ENTITY paths SYSTEM "file:../Build/common.paths">
]>
<project name="ModelRepository" basedir="." default="deploy">

	<!-- define local properties -->
	<property file="./myBuild.properties"/>
	<property name="target.jar" value="ModelRepository.jar"/>
	<property name="gen.dir" location="generated"/>
	
	<!-- import common properties -->
	<import file="../Build/common.properties.xml"/>
	
	<!--
	 | The build classpath
	 -->
	<path id="lib.dev.classpath">
		<pathelement location="${lib.dev.dir}/junit.jar"/>
	</path>

	<path id="lib.runtime.classpath">
		<pathelement location="${lib.runtime.dir}/Utils.jar"/>
		<pathelement location="${lib.runtime.dir}/castor-xml.jar"/>
		<pathelement location="${lib.runtime.dir}/parser-api.jar"/>
		<pathelement location="${lib.runtime.dir}/xerces.jar"/>
	</path>
	
	<path id="compile.classpath">
		<path refid="common.compile.classpath"/>
		<path refid="lib.dev.classpath"/>
		<path refid="lib.runtime.classpath"/>
	</path>

	<path id="test.classpath">
		<path refid="common.test.classpath"/>
		<path refid="lib.dev.classpath"/>
		<path refid="lib.runtime.classpath"/>
	</path>

	
	<!-- define local targets -->

	<!-- init local -->
	<target name="init-local">
		<mkdir dir="generated"/>
	</target>
	
	<target name="generate-local" depends="generateModel, generateBuilder" description=""/>

	<target name="create-manifest" depends="init">
		<manifest file="${build.dir}/MANIFEST.MF">
			<attribute name="Build-On" value="${timestamp.iso}"/>
			<attribute name="Build-By" value="${user.name}"/>
		</manifest>
	</target>
	
	<!-- define special targets -->

	<!-- delete old generation output -->
	<target name="deleteGeneratedModel" depends="init">
		<delete>
			<fileset dir="${gen.dir}/org/soulspace/xmi/marshal" includes="*.java"/>
			<fileset dir="${gen.dir}/org/soulspace/xmi/marshal/types" includes="*.java" />
		</delete>
	</target>

	<!-- generate classes from schema -->
	<target name="generateModel" depends="init">
		<uptodate property="generateModel.notRequired" targetfile="${gen.dir}/org/soulspace/xmi/marshal/XMI.java" >
		    <srcfiles dir="${basedir}/schema" includes="uml2.xsd"/>
		</uptodate>
		<antcall target="forcedGenerateModel"/>
	</target>	
		
	<target name="forcedGenerateModel" depends="init" unless="generateModel.notRequired">
		<antcall target="deleteGeneratedModel"/>

		<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" failonerror="yes"  >
			<classpath>
				<pathelement location="./cfg"/>
		        <pathelement location="./bin"/>
				<fileset dir="./lib/runtime">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<arg value="-f"/>
			<!--arg value="-nodesc"/-->
			<!--arg value="-generateImportedSchemas"/-->
			<arg value="-i"/>
			<arg value="${basedir}/schema/uml2.xsd"/>
			<arg value="-package"/>
			<arg value="org.soulspace.xmi.marshal"/>
			<arg value="-dest"/>
			<arg value="${gen.dir}"/>
			<arg value="-types"/>
			<arg value="j2"/>
		</java>
	
	<!--antcall target="refresh"/-->
	</target>

	<target name="generateBuilder">
		<xslt
			style="schema/gen.xsl"
			in="schema/uml2.xsd"
			out="${gen.dir}/org/soulspace/xmi/repository/poseidon/XMIBuilder.java" />
		<xslt
			style="schema/repository.xsl"
			in="schema/uml2.xsd"
			out="${gen.dir}/org/soulspace/xmi/repository/poseidon/XMIRepository.java" />
	</target>

	<import file="../Build/common.build.xml"/>

	<!--		
			<java fork="yes" classname="org.exolab.castor.builder.SourceGenerator" failonerror="yes"  >
				<classpath>
					<pathelement location="./cfg"/>
			        <pathelement location="./bin"/>
					<fileset dir="./lib/runtime">
						<include name="*.jar" />
					</fileset>
				</classpath>
				<arg value="-f"/>
				<arg value="-i"/>
				<arg value="${basedir}/cfg/uml.xsd"/>
				<arg value="-package"/>
				<arg value="org.soulspace.xmi.marshal"/>
				<arg value="-dest"/>
				<arg value="${gen.dir}"/>
				<arg value="-types"/>
				<arg value="j2"/>
			</java>
	-->

	<target name="compile-local">
		<javac srcdir="${gen.dir}"
			destdir="${classes.dir}"
			debug="${debug}">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>
	
	<target name="test-local">
	</target>

	<target name="test-xmiloader">
		<java
			classname="org.soulspace.xmi.util.XMILoader"
			classpathref="test.classpath">
			<arg value="refModels/state.xmi"/>
			<arg value="refModels/activity.xmi"/>
			<arg value="refModels/usecase.xmi"/>
			<arg value="refModels/interface.xmi"/>
			<arg value="refModels/generalization.xmi"/>
			<arg value="refModels/generalization2.xmi"/>
		</java>
	</target>
	
	<target name="test-modelloader">
		<java
			classname="org.soulspace.xmi.util.ModelLoader"
			classpathref="test.classpath">
			<arg value="refModels/state.xmi"/>
			<arg value="refModels/activity.xmi"/>
			<arg value="refModels/usecase.xmi"/>
			<arg value="refModels/interface.xmi"/>
			<arg value="refModels/generalization.xmi"/>
			<arg value="refModels/generalization2.xmi"/>
		</java>
	</target>
	
</project>