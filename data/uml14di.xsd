<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema' xmlns:UML='http://dummy.org/UML' xmlns:XMI='http://dummy.org/XMI' targetNamespace="http://dummy.org/XMI">

 <xsd:element name='XMI'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='XMI.header' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='XMI.content' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='XMI.difference' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='XMI.extensions' minOccurs='0' maxOccurs='unbounded'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.version' type='xsd:string' fixed='1.2'/>
   <xsd:attribute name='timestamp' type='xsd:string' use='optional'/>
   <xsd:attribute name='verified' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='true'/>
      <xsd:enumeration value='false'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmlns:UML' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.header'>
  <xsd:complexType>
   <xsd:sequence>
    <xsd:element ref='XMI.documentation' minOccurs='0' maxOccurs='1'/>
    <xsd:element ref='XMI.model' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='XMI.metamodel' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='XMI.metametamodel' minOccurs='0' maxOccurs='unbounded'/>
    <xsd:element ref='XMI.import' minOccurs='0' maxOccurs='unbounded'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.documentation'>
  <xsd:complexType mixed='true'>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.owner'/>
    <xsd:element ref='XMI.contact'/>
    <xsd:element ref='XMI.longDescription'/>
    <xsd:element ref='XMI.shortDescription'/>
    <xsd:element ref='XMI.exporter'/>
    <xsd:element ref='XMI.exporterVersion'/>
    <xsd:element ref='XMI.notice'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.owner'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.contact'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.longDescription'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.shortDescription'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.exporter'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.exporterVersion'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.exporterID'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.notice'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.model'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.name' type='xsd:string' use='required'/>
   <xsd:attribute name='xmi.version' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.metamodel'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.name' type='xsd:string' use='required'/>
   <xsd:attribute name='xmi.version' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.metametamodel'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.name' type='xsd:string' use='required'/>
   <xsd:attribute name='xmi.version' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.import'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.name' type='xsd:string' use='required'/>
   <xsd:attribute name='xmi.version' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.content'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.extensions'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.extender' type='xsd:string' use='required'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.extension'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.extender' type='xsd:string' use='required'/>
   <xsd:attribute name='xmi.extenderID' type='xsd:string' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.difference'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.difference'/>
    <xsd:element ref='XMI.delete'/>
    <xsd:element ref='XMI.add'/>
    <xsd:element ref='XMI.replace'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.delete'>
  <xsd:complexType>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.add'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.position' type='xsd:string' default='-1'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.replace'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
   <xsd:attribute name='xmi.position' type='xsd:string' default='-1'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.reference'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='XMI.field'>
  <xsd:complexType>
   <xsd:sequence>
   <xsd:any namespace='http://www.w3.org/namespace/'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ProcedureExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ArgListsExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ObjectSetExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Expression.language'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Expression.body'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Expression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TypeExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TimeExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:IterationExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:MultiplicityRange.lower'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:MultiplicityRange.upper'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:MultiplicityRange.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:MultiplicityRange'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:MultiplicityRange.lower'/>
    <xsd:element ref='UML:MultiplicityRange.upper'/>
    <xsd:element ref='UML:MultiplicityRange.multiplicity'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='lower' type='xsd:string' use='optional'/>
   <xsd:attribute name='upper' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:MappingExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Multiplicity.range'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:MultiplicityRange'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Multiplicity'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity.range'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='range' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:BooleanExpression'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Expression.language'/>
    <xsd:element ref='UML:Expression.body'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='language' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Data_Types'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:IterationExpression'/>
    <xsd:element ref='UML:MappingExpression'/>
    <xsd:element ref='UML:BooleanExpression'/>
    <xsd:element ref='UML:Multiplicity'/>
    <xsd:element ref='UML:ObjectSetExpression'/>
    <xsd:element ref='UML:TimeExpression'/>
    <xsd:element ref='UML:ActionExpression'/>
    <xsd:element ref='UML:Expression'/>
    <xsd:element ref='UML:TypeExpression'/>
    <xsd:element ref='UML:ArgListsExpression'/>
    <xsd:element ref='UML:ProcedureExpression'/>
    <xsd:element ref='UML:MultiplicityRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DataType'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Comment.body'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Comment.annotatedElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Comment'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Comment.body'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Comment.annotatedElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='annotatedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Class.isActive'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Class'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:Class.isActive'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='isActive' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Flow.target'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Flow.source'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Flow'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Flow.target'/>
    <xsd:element ref='UML:Flow.source'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='source' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Relationship'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:EnumerationLiteral.enumeration'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Enumeration'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:EnumerationLiteral'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:EnumerationLiteral.enumeration'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='enumeration' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Component.deploymentLocation'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Node'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Component.residentElement'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ElementResidence'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Component.implementation'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Artifact'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Component'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:Component.deploymentLocation'/>
    <xsd:element ref='UML:Component.residentElement'/>
    <xsd:element ref='UML:Component.implementation'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deploymentLocation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='residentElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='implementation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.isNavigable'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.ordering'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.aggregation'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='none'/>
      <xsd:enumeration value='aggregate'/>
      <xsd:enumeration value='composite'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.targetScope'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.changeability'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.association'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Association'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.qualifier'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Attribute'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.participant'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd.specification'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEnd'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:AssociationEnd.isNavigable'/>
    <xsd:element ref='UML:AssociationEnd.ordering'/>
    <xsd:element ref='UML:AssociationEnd.aggregation'/>
    <xsd:element ref='UML:AssociationEnd.targetScope'/>
    <xsd:element ref='UML:AssociationEnd.multiplicity'/>
    <xsd:element ref='UML:AssociationEnd.changeability'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:AssociationEnd.association'/>
    <xsd:element ref='UML:AssociationEnd.qualifier'/>
    <xsd:element ref='UML:AssociationEnd.participant'/>
    <xsd:element ref='UML:AssociationEnd.specification'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='association' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='qualifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='participant' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='specification' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isNavigable' type='xsd:string' use='optional'/>
   <xsd:attribute name='ordering' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='aggregation' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='none'/>
      <xsd:enumeration value='aggregate'/>
      <xsd:enumeration value='composite'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='targetScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='changeability' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Artifact'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Abstraction.mapping'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:MappingExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Abstraction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Abstraction.mapping'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Dependency.client'/>
    <xsd:element ref='UML:Dependency.supplier'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='client' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='supplier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='mapping' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Permission'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Dependency.client'/>
    <xsd:element ref='UML:Dependency.supplier'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='client' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='supplier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:BehavioralFeature.isQuery'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:BehavioralFeature.parameter'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Parameter'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:BehavioralFeature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:BehavioralFeature.isQuery'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:BehavioralFeature.parameter'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isQuery' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Node.deployedComponent'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Component'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Node'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:Node.deployedComponent'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deployedComponent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Interface'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementResidence.visibility'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementResidence.resident'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementResidence.container'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Component'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementResidence'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ElementResidence.visibility'/>
    <xsd:element ref='UML:ElementResidence.resident'/>
    <xsd:element ref='UML:ElementResidence.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='resident' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateParameter.template'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateParameter.parameter'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateParameter.defaultElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateParameter'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TemplateParameter.template'/>
    <xsd:element ref='UML:TemplateParameter.parameter'/>
    <xsd:element ref='UML:TemplateParameter.defaultElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='template' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='defaultElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.name'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.visibility'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.isSpecification'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.namespace'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.clientDependency'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Permission'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.constraint'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Constraint'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.targetFlow'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Flow'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.sourceFlow'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Flow'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.comment'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Comment'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.templateParameter'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TemplateParameter'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.stereotype'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Stereotype'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement.taggedValue'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TaggedValue'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ModelElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Dependency.client'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Dependency.supplier'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Dependency'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Dependency.client'/>
    <xsd:element ref='UML:Dependency.supplier'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='client' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='supplier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Enumeration.literal'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:EnumerationLiteral'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Enumeration'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:Enumeration.literal'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='literal' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Feature.ownerScope'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Feature.owner'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Feature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Attribute.initialValue'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:IterationExpression'/>
    <xsd:element ref='UML:BooleanExpression'/>
    <xsd:element ref='UML:MappingExpression'/>
    <xsd:element ref='UML:ObjectSetExpression'/>
    <xsd:element ref='UML:TimeExpression'/>
    <xsd:element ref='UML:ActionExpression'/>
    <xsd:element ref='UML:Expression'/>
    <xsd:element ref='UML:TypeExpression'/>
    <xsd:element ref='UML:ArgListsExpression'/>
    <xsd:element ref='UML:ProcedureExpression'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Attribute.associationEnd'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:AssociationEndRole'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Attribute'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:StructuralFeature.multiplicity'/>
    <xsd:element ref='UML:StructuralFeature.changeability'/>
    <xsd:element ref='UML:StructuralFeature.targetScope'/>
    <xsd:element ref='UML:StructuralFeature.ordering'/>
    <xsd:element ref='UML:Attribute.initialValue'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:StructuralFeature.type'/>
    <xsd:element ref='UML:Attribute.associationEnd'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='associationEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='changeability' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='targetScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='ordering' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='initialValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Generalization.discriminator'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Generalization.child'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:Association'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Generalization.parent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:Association'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Generalization.powertype'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Generalization'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Generalization.discriminator'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Generalization.child'/>
    <xsd:element ref='UML:Generalization.parent'/>
    <xsd:element ref='UML:Generalization.powertype'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='child' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='discriminator' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TagDefinition.tagType'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TagDefinition.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TagDefinition.owner'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Stereotype'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TagDefinition'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:TagDefinition.tagType'/>
    <xsd:element ref='UML:TagDefinition.multiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:TagDefinition.owner'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='tagType' type='xsd:string' use='optional'/>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Namespace.ownedElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Namespace'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Method.body'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ProcedureExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Method.specification'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Operation'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Method'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:BehavioralFeature.isQuery'/>
    <xsd:element ref='UML:Method.body'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:BehavioralFeature.parameter'/>
    <xsd:element ref='UML:Method.specification'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='specification' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isQuery' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationClass'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:Class.isActive'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Association.connection'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='connection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='isActive' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Constraint.body'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:BooleanExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Constraint.constrainedElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Constraint'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Constraint.body'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Constraint.constrainedElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constrainedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='body' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Classifier.feature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:Feature'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Classifier.powertypeRange'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Generalization'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Classifier'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Association.connection'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:AssociationEndRole'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Association'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Association.connection'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='connection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Usage'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Dependency.client'/>
    <xsd:element ref='UML:Dependency.supplier'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='client' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='supplier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateArgument.modelElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateArgument.binding'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Binding'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TemplateArgument'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TemplateArgument.modelElement'/>
    <xsd:element ref='UML:TemplateArgument.binding'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='modelElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='binding' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GeneralizableElement.isRoot'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GeneralizableElement.isLeaf'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GeneralizableElement.isAbstract'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GeneralizableElement.generalization'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Generalization'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GeneralizableElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Primitive'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation.concurrency'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='sequential'/>
      <xsd:enumeration value='guarded'/>
      <xsd:enumeration value='concurrent'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation.isRoot'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation.isLeaf'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation.isAbstract'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation.specification'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Operation'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:BehavioralFeature.isQuery'/>
    <xsd:element ref='UML:Operation.concurrency'/>
    <xsd:element ref='UML:Operation.isRoot'/>
    <xsd:element ref='UML:Operation.isLeaf'/>
    <xsd:element ref='UML:Operation.isAbstract'/>
    <xsd:element ref='UML:Operation.specification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:BehavioralFeature.parameter'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isQuery' type='xsd:string' use='optional'/>
   <xsd:attribute name='concurrency' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='sequential'/>
      <xsd:enumeration value='guarded'/>
      <xsd:enumeration value='concurrent'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='specification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Binding.argument'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TemplateArgument'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Binding'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Dependency.client'/>
    <xsd:element ref='UML:Dependency.supplier'/>
    <xsd:element ref='UML:Binding.argument'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='client' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='supplier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='argument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:PresentationElement.subject'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:PresentationElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:PresentationElement.subject'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='subject' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stereotype.icon'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stereotype.baseClass'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stereotype.definedTag'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TagDefinition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stereotype.stereotypeConstraint'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Constraint'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stereotype'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:Stereotype.icon'/>
    <xsd:element ref='UML:Stereotype.baseClass'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Stereotype.definedTag'/>
    <xsd:element ref='UML:Stereotype.stereotypeConstraint'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='definedTag' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotypeConstraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='icon' type='xsd:string' use='optional'/>
   <xsd:attribute name='baseClass' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ProgrammingLanguageDataType.expression'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TypeExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ProgrammingLanguageDataType'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType.expression'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='expression' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Element'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.extension'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Parameter.defaultValue'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:IterationExpression'/>
    <xsd:element ref='UML:BooleanExpression'/>
    <xsd:element ref='UML:MappingExpression'/>
    <xsd:element ref='UML:ObjectSetExpression'/>
    <xsd:element ref='UML:TimeExpression'/>
    <xsd:element ref='UML:ActionExpression'/>
    <xsd:element ref='UML:Expression'/>
    <xsd:element ref='UML:TypeExpression'/>
    <xsd:element ref='UML:ArgListsExpression'/>
    <xsd:element ref='UML:ProcedureExpression'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Parameter.kind'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='in'/>
      <xsd:enumeration value='inout'/>
      <xsd:enumeration value='out'/>
      <xsd:enumeration value='return'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Parameter.behavioralFeature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:BehavioralFeature'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Parameter.type'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Parameter'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Parameter.defaultValue'/>
    <xsd:element ref='UML:Parameter.kind'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Parameter.behavioralFeature'/>
    <xsd:element ref='UML:Parameter.type'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='behavioralFeature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='defaultValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='kind' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='in'/>
      <xsd:enumeration value='inout'/>
      <xsd:enumeration value='out'/>
      <xsd:enumeration value='return'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TaggedValue.dataValue'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TaggedValue.modelElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TaggedValue.type'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TagDefinition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TaggedValue.referenceValue'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TaggedValue'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:TaggedValue.dataValue'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:TaggedValue.modelElement'/>
    <xsd:element ref='UML:TaggedValue.type'/>
    <xsd:element ref='UML:TaggedValue.referenceValue'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='modelElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='referenceValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='dataValue' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature.changeability'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature.targetScope'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature.ordering'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature.type'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StructuralFeature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:StructuralFeature.multiplicity'/>
    <xsd:element ref='UML:StructuralFeature.changeability'/>
    <xsd:element ref='UML:StructuralFeature.targetScope'/>
    <xsd:element ref='UML:StructuralFeature.ordering'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:StructuralFeature.type'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='changeability' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='targetScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='ordering' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Core'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ElementResidence'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:TemplateParameter'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Element'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:PresentationElement'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:TemplateArgument'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Model'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Package.elementImport'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='elementImport' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport.visibility'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport.alias'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport.isSpecification'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport.package'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:Model'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport.importedElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ElementImport'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ElementImport.visibility'/>
    <xsd:element ref='UML:ElementImport.alias'/>
    <xsd:element ref='UML:ElementImport.isSpecification'/>
    <xsd:element ref='UML:ElementImport.package'/>
    <xsd:element ref='UML:ElementImport.importedElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='package' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='importedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='alias' type='xsd:string' use='optional'/>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Package.elementImport'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ElementImport'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Package'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Package.elementImport'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='elementImport' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Subsystem.isInstantiable'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Subsystem'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:Subsystem.isInstantiable'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Package.elementImport'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='elementImport' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='isInstantiable' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Model_Management'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:ElementImport'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Link.association'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Association'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Link.connection'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:LinkEnd'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Link'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Link.association'/>
    <xsd:element ref='UML:Link.connection'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='association' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='connection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionSequence.action'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionSequence'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='UML:ActionSequence.action'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='action' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.recurrence'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:IterationExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.target'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ObjectSetExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.isAsynchronous'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.script'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActionExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.actualArgument'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Argument'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action.actionSequence'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActionSequence'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Action'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TerminateAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.classifier'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.linkEnd'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:LinkEnd'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.slot'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AttributeLink'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.componentInstance'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ComponentInstance'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.ownedInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance.ownedLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Instance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DataValue'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CallAction.operation'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Operation'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CallAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='UML:CallAction.operation'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='operation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkEnd.instance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkEnd.link'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkEnd.associationEnd'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:AssociationEndRole'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkEnd.qualifiedValue'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AttributeLink'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkEnd'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:LinkEnd.instance'/>
    <xsd:element ref='UML:LinkEnd.link'/>
    <xsd:element ref='UML:LinkEnd.associationEnd'/>
    <xsd:element ref='UML:LinkEnd.qualifiedValue'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='instance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='link' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='associationEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='qualifiedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DestroyAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus.argument'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus.sender'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus.receiver'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus.communicationLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus.dispatchAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Stimulus'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Stimulus.argument'/>
    <xsd:element ref='UML:Stimulus.sender'/>
    <xsd:element ref='UML:Stimulus.receiver'/>
    <xsd:element ref='UML:Stimulus.communicationLink'/>
    <xsd:element ref='UML:Stimulus.dispatchAction'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='argument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sender' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='receiver' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='communicationLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='dispatchAction' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SendAction.signal'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Signal'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SendAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='UML:SendAction.signal'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='signal' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Object'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LinkObject'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='UML:Link.association'/>
    <xsd:element ref='UML:Link.connection'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='association' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='connection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Exception'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AttributeLink.attribute'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Attribute'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AttributeLink.value'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AttributeLink.instance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AttributeLink.linkEnd'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:LinkEnd'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AttributeLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:AttributeLink.attribute'/>
    <xsd:element ref='UML:AttributeLink.value'/>
    <xsd:element ref='UML:AttributeLink.instance'/>
    <xsd:element ref='UML:AttributeLink.linkEnd'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='attribute' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='value' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='instance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CreateAction.instantiation'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CreateAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='UML:CreateAction.instantiation'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='instantiation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ReturnAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Signal'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubsystemInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:NodeInstance.resident'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ComponentInstance'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:NodeInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='UML:NodeInstance.resident'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='resident' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UninterpretedAction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Action.recurrence'/>
    <xsd:element ref='UML:Action.target'/>
    <xsd:element ref='UML:Action.isAsynchronous'/>
    <xsd:element ref='UML:Action.script'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Action.actualArgument'/>
    <xsd:element ref='UML:Action.actionSequence'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actualArgument' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='actionSequence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='recurrence' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isAsynchronous' type='xsd:string' use='optional'/>
   <xsd:attribute name='script' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ComponentInstance.nodeInstance'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:NodeInstance'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ComponentInstance.resident'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ComponentInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='UML:ComponentInstance.nodeInstance'/>
    <xsd:element ref='UML:ComponentInstance.resident'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='nodeInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='resident' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Argument.value'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:IterationExpression'/>
    <xsd:element ref='UML:BooleanExpression'/>
    <xsd:element ref='UML:MappingExpression'/>
    <xsd:element ref='UML:ObjectSetExpression'/>
    <xsd:element ref='UML:TimeExpression'/>
    <xsd:element ref='UML:ActionExpression'/>
    <xsd:element ref='UML:Expression'/>
    <xsd:element ref='UML:TypeExpression'/>
    <xsd:element ref='UML:ArgListsExpression'/>
    <xsd:element ref='UML:ProcedureExpression'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Argument.action'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Argument'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Argument.value'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Argument.action'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='action' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='value' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception.specification'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception.isRoot'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception.isLeaf'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception.isAbstract'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception.signal'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Signal'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reception'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Feature.ownerScope'/>
    <xsd:element ref='UML:BehavioralFeature.isQuery'/>
    <xsd:element ref='UML:Reception.specification'/>
    <xsd:element ref='UML:Reception.isRoot'/>
    <xsd:element ref='UML:Reception.isLeaf'/>
    <xsd:element ref='UML:Reception.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Feature.owner'/>
    <xsd:element ref='UML:BehavioralFeature.parameter'/>
    <xsd:element ref='UML:Reception.signal'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='signal' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='ownerScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isQuery' type='xsd:string' use='optional'/>
   <xsd:attribute name='specification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:A_context_raisedSignal'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Common_Behavior'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:A_context_raisedSignal'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Interaction.message'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Message'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Interaction.context'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Collaboration'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Interaction'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Interaction.message'/>
    <xsd:element ref='UML:Interaction.context'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='message' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='context' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEndRole.collaborationMultiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEndRole.base'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:AssociationEndRole'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEndRole.availableQualifier'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Attribute'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationEndRole'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:AssociationEnd.isNavigable'/>
    <xsd:element ref='UML:AssociationEnd.ordering'/>
    <xsd:element ref='UML:AssociationEnd.aggregation'/>
    <xsd:element ref='UML:AssociationEnd.targetScope'/>
    <xsd:element ref='UML:AssociationEnd.multiplicity'/>
    <xsd:element ref='UML:AssociationEnd.changeability'/>
    <xsd:element ref='UML:AssociationEndRole.collaborationMultiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:AssociationEnd.association'/>
    <xsd:element ref='UML:AssociationEnd.qualifier'/>
    <xsd:element ref='UML:AssociationEnd.participant'/>
    <xsd:element ref='UML:AssociationEnd.specification'/>
    <xsd:element ref='UML:AssociationEndRole.base'/>
    <xsd:element ref='UML:AssociationEndRole.availableQualifier'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='association' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='qualifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='participant' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='specification' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='base' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='availableQualifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isNavigable' type='xsd:string' use='optional'/>
   <xsd:attribute name='ordering' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='unordered'/>
      <xsd:enumeration value='ordered'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='aggregation' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='none'/>
      <xsd:enumeration value='aggregate'/>
      <xsd:enumeration value='composite'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='targetScope' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='instance'/>
      <xsd:enumeration value='classifier'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='changeability' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='changeable'/>
      <xsd:enumeration value='frozen'/>
      <xsd:enumeration value='addOnly'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='collaborationMultiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration.interaction'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Interaction'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration.representedClassifier'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration.representedOperation'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Operation'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration.constrainingElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration.usedCollaboration'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Collaboration'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaboration'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Collaboration.interaction'/>
    <xsd:element ref='UML:Collaboration.representedClassifier'/>
    <xsd:element ref='UML:Collaboration.representedOperation'/>
    <xsd:element ref='UML:Collaboration.constrainingElement'/>
    <xsd:element ref='UML:Collaboration.usedCollaboration'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='interaction' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='representedClassifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='representedOperation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constrainingElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='usedCollaboration' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:InteractionInstanceSet.context'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:InteractionInstanceSet.interaction'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Interaction'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:InteractionInstanceSet.participatingStimulus'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Stimulus'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:InteractionInstanceSet'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:InteractionInstanceSet.context'/>
    <xsd:element ref='UML:InteractionInstanceSet.interaction'/>
    <xsd:element ref='UML:InteractionInstanceSet.participatingStimulus'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='context' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='interaction' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='participatingStimulus' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet.interactionInstanceSet'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:InteractionInstanceSet'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet.collaboration'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Collaboration'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet.participatingInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet.participatingLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet.constrainingElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CollaborationInstanceSet'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:CollaborationInstanceSet.interactionInstanceSet'/>
    <xsd:element ref='UML:CollaborationInstanceSet.collaboration'/>
    <xsd:element ref='UML:CollaborationInstanceSet.participatingInstance'/>
    <xsd:element ref='UML:CollaborationInstanceSet.participatingLink'/>
    <xsd:element ref='UML:CollaborationInstanceSet.constrainingElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='interactionInstanceSet' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='collaboration' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='participatingInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='participatingLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constrainingElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.interaction'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Interaction'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.activator'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Message'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.sender'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ClassifierRole'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.receiver'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ClassifierRole'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.predecessor'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Message'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.communicationConnection'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.action'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message.conformingStimulus'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Stimulus'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Message'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Message.interaction'/>
    <xsd:element ref='UML:Message.activator'/>
    <xsd:element ref='UML:Message.sender'/>
    <xsd:element ref='UML:Message.receiver'/>
    <xsd:element ref='UML:Message.predecessor'/>
    <xsd:element ref='UML:Message.communicationConnection'/>
    <xsd:element ref='UML:Message.action'/>
    <xsd:element ref='UML:Message.conformingStimulus'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='interaction' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='activator' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sender' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='receiver' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='predecessor' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='communicationConnection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='action' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='conformingStimulus' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationRole.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationRole.base'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Association'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationRole.message'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Message'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationRole.conformingLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:AssociationRole'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:AssociationRole.multiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Association.connection'/>
    <xsd:element ref='UML:AssociationRole.base'/>
    <xsd:element ref='UML:AssociationRole.message'/>
    <xsd:element ref='UML:AssociationRole.conformingLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='connection' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='base' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='message' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='conformingLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole.multiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole.base'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole.availableFeature'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:Feature'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole.availableContents'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole.conformingInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:LinkObject'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierRole'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ClassifierRole.multiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:ClassifierRole.base'/>
    <xsd:element ref='UML:ClassifierRole.availableFeature'/>
    <xsd:element ref='UML:ClassifierRole.availableContents'/>
    <xsd:element ref='UML:ClassifierRole.conformingInstance'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='base' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='availableFeature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='availableContents' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='conformingInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='multiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Collaborations'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Property.key'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Property.value'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Property'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Property.key'/>
    <xsd:element ref='UML:Property.value'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='key' type='xsd:string' use='optional'/>
   <xsd:attribute name='value' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement.position'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement.semanticModel'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SimpleSemanticModelElement'/>
    <xsd:element ref='UML:Uml1SemanticModelBridge'/>
    <xsd:element ref='UML:CoreSemanticModelBridge'/>
    <xsd:element ref='UML:SemanticModelBridge'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement.link'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramLink'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement.contained'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Reference'/>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:DiagramElement'/>
    <xsd:element ref='UML:Polyline'/>
    <xsd:element ref='UML:Ellipse'/>
    <xsd:element ref='UML:GraphicPrimitive'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:Image'/>
    <xsd:element ref='UML:GraphElement'/>
    <xsd:element ref='UML:LeafElement'/>
    <xsd:element ref='UML:TextElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement.anchorage'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphConnector'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:GraphElement.position'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='UML:GraphElement.semanticModel'/>
    <xsd:element ref='UML:GraphElement.link'/>
    <xsd:element ref='UML:GraphElement.contained'/>
    <xsd:element ref='UML:GraphElement.anchorage'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='semanticModel' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='link' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='contained' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='anchorage' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='position' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Image.uri'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Image.mimeType'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Image'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:Image.uri'/>
    <xsd:element ref='UML:Image.mimeType'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='uri' type='xsd:string' use='optional'/>
   <xsd:attribute name='mimeType' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramElement.isVisible'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramElement.property'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Property'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramElement.reference'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramElement.container'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:GraphElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TextElement.text'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TextElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:TextElement.text'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='text' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CoreSemanticModelBridge'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SemanticModelBridge.presentation'/>
    <xsd:element ref='UML:SemanticModelBridge.graphElement'/>
    <xsd:element ref='UML:SemanticModelBridge.diagram'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagram' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='presentation' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramLink.zoom'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramLink.viewport'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramLink.graphElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:GraphElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramLink.diagram'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Diagram'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:DiagramLink'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramLink.zoom'/>
    <xsd:element ref='UML:DiagramLink.viewport'/>
    <xsd:element ref='UML:DiagramLink.graphElement'/>
    <xsd:element ref='UML:DiagramLink.diagram'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagram' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='zoom' type='xsd:string' use='optional'/>
   <xsd:attribute name='viewport' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphConnector.position'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphConnector.graphElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:GraphElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphConnector.graphEdge'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphEdge'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphConnector'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphConnector.position'/>
    <xsd:element ref='UML:GraphConnector.graphElement'/>
    <xsd:element ref='UML:GraphConnector.graphEdge'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='graphEdge' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='position' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:LeafElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reference.isIndividualPresentation'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reference.referenced'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Reference'/>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:DiagramElement'/>
    <xsd:element ref='UML:Polyline'/>
    <xsd:element ref='UML:Ellipse'/>
    <xsd:element ref='UML:GraphicPrimitive'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:Image'/>
    <xsd:element ref='UML:GraphElement'/>
    <xsd:element ref='UML:LeafElement'/>
    <xsd:element ref='UML:TextElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Reference'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:Reference.isIndividualPresentation'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='UML:Reference.referenced'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='referenced' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='isIndividualPresentation' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphicPrimitive'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Polyline.waypoints'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Polyline.closed'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Polyline'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:Polyline.waypoints'/>
    <xsd:element ref='UML:Polyline.closed'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='waypoints' type='xsd:string' use='optional'/>
   <xsd:attribute name='closed' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Uml1SemanticModelBridge.element'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Element'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:PresentationElement'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Uml1SemanticModelBridge'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SemanticModelBridge.presentation'/>
    <xsd:element ref='UML:SemanticModelBridge.graphElement'/>
    <xsd:element ref='UML:SemanticModelBridge.diagram'/>
    <xsd:element ref='UML:Uml1SemanticModelBridge.element'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagram' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='element' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='presentation' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SimpleSemanticModelElement.typeInfo'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SimpleSemanticModelElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SemanticModelBridge.presentation'/>
    <xsd:element ref='UML:SimpleSemanticModelElement.typeInfo'/>
    <xsd:element ref='UML:SemanticModelBridge.graphElement'/>
    <xsd:element ref='UML:SemanticModelBridge.diagram'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagram' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='presentation' type='xsd:string' use='optional'/>
   <xsd:attribute name='typeInfo' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphNode.size'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphNode'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:GraphElement.position'/>
    <xsd:element ref='UML:GraphNode.size'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='UML:GraphElement.semanticModel'/>
    <xsd:element ref='UML:GraphElement.link'/>
    <xsd:element ref='UML:GraphElement.contained'/>
    <xsd:element ref='UML:GraphElement.anchorage'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='semanticModel' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='link' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='contained' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='anchorage' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='position' type='xsd:string' use='optional'/>
   <xsd:attribute name='size' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram.name'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram.zoom'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram.viewport'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram.diagramLink'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramLink'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram.owner'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SimpleSemanticModelElement'/>
    <xsd:element ref='UML:Uml1SemanticModelBridge'/>
    <xsd:element ref='UML:CoreSemanticModelBridge'/>
    <xsd:element ref='UML:SemanticModelBridge'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:GraphElement.position'/>
    <xsd:element ref='UML:GraphNode.size'/>
    <xsd:element ref='UML:Diagram.name'/>
    <xsd:element ref='UML:Diagram.zoom'/>
    <xsd:element ref='UML:Diagram.viewport'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='UML:GraphElement.semanticModel'/>
    <xsd:element ref='UML:GraphElement.link'/>
    <xsd:element ref='UML:GraphElement.contained'/>
    <xsd:element ref='UML:GraphElement.anchorage'/>
    <xsd:element ref='UML:Diagram.diagramLink'/>
    <xsd:element ref='UML:Diagram.owner'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='semanticModel' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='link' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='contained' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='anchorage' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagramLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='owner' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='position' type='xsd:string' use='optional'/>
   <xsd:attribute name='size' type='xsd:string' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='zoom' type='xsd:string' use='optional'/>
   <xsd:attribute name='viewport' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.center'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.radiusX'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.radiusY'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.rotation'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.startAngle'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse.endAngle'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Ellipse'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:Ellipse.center'/>
    <xsd:element ref='UML:Ellipse.radiusX'/>
    <xsd:element ref='UML:Ellipse.radiusY'/>
    <xsd:element ref='UML:Ellipse.rotation'/>
    <xsd:element ref='UML:Ellipse.startAngle'/>
    <xsd:element ref='UML:Ellipse.endAngle'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='center' type='xsd:string' use='optional'/>
   <xsd:attribute name='radiusX' type='xsd:string' use='optional'/>
   <xsd:attribute name='radiusY' type='xsd:string' use='optional'/>
   <xsd:attribute name='rotation' type='xsd:string' use='optional'/>
   <xsd:attribute name='startAngle' type='xsd:string' use='optional'/>
   <xsd:attribute name='endAngle' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SemanticModelBridge.presentation'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SemanticModelBridge.graphElement'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:GraphElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SemanticModelBridge.diagram'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Diagram'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SemanticModelBridge'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SemanticModelBridge.presentation'/>
    <xsd:element ref='UML:SemanticModelBridge.graphElement'/>
    <xsd:element ref='UML:SemanticModelBridge.diagram'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='graphElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='diagram' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='presentation' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphEdge.waypoints'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.field'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphEdge.anchor'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:GraphConnector'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:GraphEdge'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:DiagramElement.isVisible'/>
    <xsd:element ref='UML:GraphElement.position'/>
    <xsd:element ref='UML:GraphEdge.waypoints'/>
    <xsd:element ref='UML:DiagramElement.property'/>
    <xsd:element ref='UML:DiagramElement.reference'/>
    <xsd:element ref='UML:DiagramElement.container'/>
    <xsd:element ref='UML:GraphElement.semanticModel'/>
    <xsd:element ref='UML:GraphElement.link'/>
    <xsd:element ref='UML:GraphElement.contained'/>
    <xsd:element ref='UML:GraphElement.anchorage'/>
    <xsd:element ref='UML:GraphEdge.anchor'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='property' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='reference' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='semanticModel' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='link' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='contained' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='anchorage' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='anchor' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='isVisible' type='xsd:string' use='optional'/>
   <xsd:attribute name='position' type='xsd:string' use='optional'/>
   <xsd:attribute name='waypoints' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Diagram_Interchange'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Reference'/>
    <xsd:element ref='UML:SimpleSemanticModelElement'/>
    <xsd:element ref='UML:GraphNode'/>
    <xsd:element ref='UML:DiagramElement'/>
    <xsd:element ref='UML:Polyline'/>
    <xsd:element ref='UML:GraphConnector'/>
    <xsd:element ref='UML:Image'/>
    <xsd:element ref='UML:CoreSemanticModelBridge'/>
    <xsd:element ref='UML:GraphElement'/>
    <xsd:element ref='UML:DiagramLink'/>
    <xsd:element ref='UML:LeafElement'/>
    <xsd:element ref='UML:Property'/>
    <xsd:element ref='UML:GraphEdge'/>
    <xsd:element ref='UML:Ellipse'/>
    <xsd:element ref='UML:GraphicPrimitive'/>
    <xsd:element ref='UML:Uml1SemanticModelBridge'/>
    <xsd:element ref='UML:Diagram'/>
    <xsd:element ref='UML:SemanticModelBridge'/>
    <xsd:element ref='UML:TextElement'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.entry'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.exit'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.deferrableEvent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:TimeEvent'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.internalTransition'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Transition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.doActivity'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State.stateMachine'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateMachine'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CallEvent.operation'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Operation'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CallEvent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Event.parameter'/>
    <xsd:element ref='UML:CallEvent.operation'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='operation' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Guard.expression'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:BooleanExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Guard.transition'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Transition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Guard'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Guard.expression'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Guard.transition'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='transition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='expression' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StubState.referenceState'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StubState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:StubState.referenceState'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='referenceState' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SynchState.bound'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SynchState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:SynchState.bound'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='bound' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:FinalState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TimeEvent.when'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:TimeExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:TimeEvent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:TimeEvent.when'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Event.parameter'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='when' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ChangeEvent.changeExpression'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:BooleanExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ChangeEvent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ChangeEvent.changeExpression'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Event.parameter'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='changeExpression' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Pseudostate.kind'>
  <xsd:complexType>
   <xsd:attribute name='xmi.value' use='required'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='choice'/>
      <xsd:enumeration value='deepHistory'/>
      <xsd:enumeration value='fork'/>
      <xsd:enumeration value='initial'/>
      <xsd:enumeration value='join'/>
      <xsd:enumeration value='junction'/>
      <xsd:enumeration value='shallowHistory'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Pseudostate'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Pseudostate.kind'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='kind' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='choice'/>
      <xsd:enumeration value='deepHistory'/>
      <xsd:enumeration value='fork'/>
      <xsd:enumeration value='initial'/>
      <xsd:enumeration value='join'/>
      <xsd:enumeration value='junction'/>
      <xsd:enumeration value='shallowHistory'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubmachineState.submachine'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateMachine'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubmachineState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:CompositeState.isConcurrent'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='UML:CompositeState.subvertex'/>
    <xsd:element ref='UML:SubmachineState.submachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='subvertex' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='submachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isConcurrent' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateMachine.context'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateMachine.top'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateMachine.transitions'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Transition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateMachine.submachineState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateMachine'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateMachine.context'/>
    <xsd:element ref='UML:StateMachine.top'/>
    <xsd:element ref='UML:StateMachine.transitions'/>
    <xsd:element ref='UML:StateMachine.submachineState'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='context' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='top' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='transitions' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='submachineState' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SimpleState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Event.parameter'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Parameter'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Event'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Event.parameter'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateVertex.container'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateVertex.outgoing'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Transition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateVertex.incoming'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Transition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:StateVertex'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CompositeState.isConcurrent'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CompositeState.subvertex'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CompositeState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:CompositeState.isConcurrent'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='UML:CompositeState.subvertex'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='subvertex' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isConcurrent' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SignalEvent.signal'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Signal'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SignalEvent'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Event.parameter'/>
    <xsd:element ref='UML:SignalEvent.signal'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='signal' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.guard'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Guard'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.effect'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:UninterpretedAction'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.trigger'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:TimeEvent'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.source'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.target'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition.stateMachine'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateMachine'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Transition'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Transition.guard'/>
    <xsd:element ref='UML:Transition.effect'/>
    <xsd:element ref='UML:Transition.trigger'/>
    <xsd:element ref='UML:Transition.source'/>
    <xsd:element ref='UML:Transition.target'/>
    <xsd:element ref='UML:Transition.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='guard' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='effect' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='trigger' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='source' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='target' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:State_Machines'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionState.isDynamic'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionState.dynamicArguments'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ArgListsExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionState.dynamicMultiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActionState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ActionState.isDynamic'/>
    <xsd:element ref='UML:ActionState.dynamicArguments'/>
    <xsd:element ref='UML:ActionState.dynamicMultiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isDynamic' type='xsd:string' use='optional'/>
   <xsd:attribute name='dynamicArguments' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='dynamicMultiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierInState.type'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierInState.inState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:SubactivityState'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ClassifierInState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:ClassifierInState.type'/>
    <xsd:element ref='UML:ClassifierInState.inState'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='inState' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:CallState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ActionState.isDynamic'/>
    <xsd:element ref='UML:ActionState.dynamicArguments'/>
    <xsd:element ref='UML:ActionState.dynamicMultiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isDynamic' type='xsd:string' use='optional'/>
   <xsd:attribute name='dynamicArguments' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='dynamicMultiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Partition.contents'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:CompositeState'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:CallAction'/>
    <xsd:element ref='UML:Transition'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:LinkEnd'/>
    <xsd:element ref='UML:Usage'/>
    <xsd:element ref='UML:ReturnAction'/>
    <xsd:element ref='UML:Comment'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:AttributeLink'/>
    <xsd:element ref='UML:AssociationEndRole'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:DataValue'/>
    <xsd:element ref='UML:StructuralFeature'/>
    <xsd:element ref='UML:CollaborationInstanceSet'/>
    <xsd:element ref='UML:SubmachineState'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:GeneralizableElement'/>
    <xsd:element ref='UML:TagDefinition'/>
    <xsd:element ref='UML:Action'/>
    <xsd:element ref='UML:Collaboration'/>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:AssociationEnd'/>
    <xsd:element ref='UML:Object'/>
    <xsd:element ref='UML:Event'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:TerminateAction'/>
    <xsd:element ref='UML:CreateAction'/>
    <xsd:element ref='UML:Interface'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:Relationship'/>
    <xsd:element ref='UML:Stereotype'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:ChangeEvent'/>
    <xsd:element ref='UML:Flow'/>
    <xsd:element ref='UML:Instance'/>
    <xsd:element ref='UML:DestroyAction'/>
    <xsd:element ref='UML:Parameter'/>
    <xsd:element ref='UML:EnumerationLiteral'/>
    <xsd:element ref='UML:SynchState'/>
    <xsd:element ref='UML:AssociationRole'/>
    <xsd:element ref='UML:Reception'/>
    <xsd:element ref='UML:Binding'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:UninterpretedAction'/>
    <xsd:element ref='UML:SimpleState'/>
    <xsd:element ref='UML:Generalization'/>
    <xsd:element ref='UML:Link'/>
    <xsd:element ref='UML:Namespace'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Method'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:State'/>
    <xsd:element ref='UML:Model'/>
    <xsd:element ref='UML:Feature'/>
    <xsd:element ref='UML:FinalState'/>
    <xsd:element ref='UML:Stimulus'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:Package'/>
    <xsd:element ref='UML:InteractionInstanceSet'/>
    <xsd:element ref='UML:Association'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:StateVertex'/>
    <xsd:element ref='UML:TimeEvent'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:Abstraction'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:ComponentInstance'/>
    <xsd:element ref='UML:TaggedValue'/>
    <xsd:element ref='UML:SendAction'/>
    <xsd:element ref='UML:Argument'/>
    <xsd:element ref='UML:StateMachine'/>
    <xsd:element ref='UML:SignalEvent'/>
    <xsd:element ref='UML:BehavioralFeature'/>
    <xsd:element ref='UML:LinkObject'/>
    <xsd:element ref='UML:Guard'/>
    <xsd:element ref='UML:Constraint'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:ActionSequence'/>
    <xsd:element ref='UML:Interaction'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:CallEvent'/>
    <xsd:element ref='UML:StubState'/>
    <xsd:element ref='UML:Permission'/>
    <xsd:element ref='UML:Operation'/>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:Dependency'/>
    <xsd:element ref='UML:Message'/>
    <xsd:element ref='UML:NodeInstance'/>
    <xsd:element ref='UML:Attribute'/>
    <xsd:element ref='UML:Pseudostate'/>
    <xsd:element ref='UML:SubsystemInstance'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:ModelElement'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Partition.activityGraph'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ActivityGraph'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Partition'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Partition.contents'/>
    <xsd:element ref='UML:Partition.activityGraph'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='contents' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='activityGraph' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubactivityState.isDynamic'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubactivityState.dynamicArguments'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ArgListsExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubactivityState.dynamicMultiplicity'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Multiplicity'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:SubactivityState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:CompositeState.isConcurrent'/>
    <xsd:element ref='UML:SubactivityState.isDynamic'/>
    <xsd:element ref='UML:SubactivityState.dynamicArguments'/>
    <xsd:element ref='UML:SubactivityState.dynamicMultiplicity'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='UML:CompositeState.subvertex'/>
    <xsd:element ref='UML:SubmachineState.submachine'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='subvertex' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='submachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isConcurrent' type='xsd:string' use='optional'/>
   <xsd:attribute name='isDynamic' type='xsd:string' use='optional'/>
   <xsd:attribute name='dynamicArguments' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='dynamicMultiplicity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActivityGraph.partition'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Partition'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ActivityGraph'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateMachine.context'/>
    <xsd:element ref='UML:StateMachine.top'/>
    <xsd:element ref='UML:StateMachine.transitions'/>
    <xsd:element ref='UML:StateMachine.submachineState'/>
    <xsd:element ref='UML:ActivityGraph.partition'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='context' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='top' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='transitions' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='submachineState' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='partition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ObjectFlowState.isSynch'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ObjectFlowState.parameter'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Parameter'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ObjectFlowState.type'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Exception'/>
    <xsd:element ref='UML:Subsystem'/>
    <xsd:element ref='UML:Class'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:ProgrammingLanguageDataType'/>
    <xsd:element ref='UML:ClassifierRole'/>
    <xsd:element ref='UML:Signal'/>
    <xsd:element ref='UML:AssociationClass'/>
    <xsd:element ref='UML:DataType'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:Node'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Artifact'/>
    <xsd:element ref='UML:Enumeration'/>
    <xsd:element ref='UML:Classifier'/>
    <xsd:element ref='UML:Component'/>
    <xsd:element ref='UML:Primitive'/>
    <xsd:element ref='UML:Interface'/>
   </xsd:choice>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ObjectFlowState'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ObjectFlowState.isSynch'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:StateVertex.container'/>
    <xsd:element ref='UML:StateVertex.outgoing'/>
    <xsd:element ref='UML:StateVertex.incoming'/>
    <xsd:element ref='UML:State.entry'/>
    <xsd:element ref='UML:State.exit'/>
    <xsd:element ref='UML:State.deferrableEvent'/>
    <xsd:element ref='UML:State.internalTransition'/>
    <xsd:element ref='UML:State.doActivity'/>
    <xsd:element ref='UML:State.stateMachine'/>
    <xsd:element ref='UML:ObjectFlowState.parameter'/>
    <xsd:element ref='UML:ObjectFlowState.type'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='container' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='outgoing' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='incoming' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='entry' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='exit' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='deferrableEvent' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='internalTransition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='doActivity' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stateMachine' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='parameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='type' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isSynch' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Activity_Graphs'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ObjectFlowState'/>
    <xsd:element ref='UML:CallState'/>
    <xsd:element ref='UML:ClassifierInState'/>
    <xsd:element ref='UML:ActivityGraph'/>
    <xsd:element ref='UML:ActionState'/>
    <xsd:element ref='UML:SubactivityState'/>
    <xsd:element ref='UML:Partition'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Extend.condition'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:BooleanExpression'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Extend.base'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCase'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Extend.extension'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCase'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Extend.extensionPoint'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ExtensionPoint'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Extend'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:Extend.condition'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Extend.base'/>
    <xsd:element ref='UML:Extend.extension'/>
    <xsd:element ref='UML:Extend.extensionPoint'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='base' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='extension' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='extensionPoint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='condition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UseCase.extend'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Extend'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UseCase.include'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:Include'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UseCase.extensionPoint'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ExtensionPoint'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UseCase'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='UML:UseCase.extend'/>
    <xsd:element ref='UML:UseCase.include'/>
    <xsd:element ref='UML:UseCase.extensionPoint'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='extend' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='include' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='extensionPoint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UseCaseInstance'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Instance.classifier'/>
    <xsd:element ref='UML:Instance.linkEnd'/>
    <xsd:element ref='UML:Instance.slot'/>
    <xsd:element ref='UML:Instance.componentInstance'/>
    <xsd:element ref='UML:Instance.ownedInstance'/>
    <xsd:element ref='UML:Instance.ownedLink'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='classifier' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='linkEnd' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='slot' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='componentInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedInstance' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedLink' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Actor'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:GeneralizableElement.isRoot'/>
    <xsd:element ref='UML:GeneralizableElement.isLeaf'/>
    <xsd:element ref='UML:GeneralizableElement.isAbstract'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:GeneralizableElement.generalization'/>
    <xsd:element ref='UML:Namespace.ownedElement'/>
    <xsd:element ref='UML:Classifier.feature'/>
    <xsd:element ref='UML:Classifier.powertypeRange'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='generalization' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='ownedElement' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='feature' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='powertypeRange' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='isRoot' type='xsd:string' use='optional'/>
   <xsd:attribute name='isLeaf' type='xsd:string' use='optional'/>
   <xsd:attribute name='isAbstract' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ExtensionPoint.location'>
  <xsd:complexType mixed='true'>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.reference'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ExtensionPoint.useCase'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCase'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:ExtensionPoint'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ExtensionPoint.location'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:ExtensionPoint.useCase'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='useCase' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='location' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Include.addition'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCase'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Include.base'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCase'/>
   </xsd:sequence>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Include'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:ModelElement.name'/>
    <xsd:element ref='UML:ModelElement.visibility'/>
    <xsd:element ref='UML:ModelElement.isSpecification'/>
    <xsd:element ref='UML:ModelElement.namespace'/>
    <xsd:element ref='UML:ModelElement.clientDependency'/>
    <xsd:element ref='UML:ModelElement.constraint'/>
    <xsd:element ref='UML:ModelElement.targetFlow'/>
    <xsd:element ref='UML:ModelElement.sourceFlow'/>
    <xsd:element ref='UML:ModelElement.comment'/>
    <xsd:element ref='UML:ModelElement.templateParameter'/>
    <xsd:element ref='UML:ModelElement.stereotype'/>
    <xsd:element ref='UML:ModelElement.taggedValue'/>
    <xsd:element ref='UML:Include.addition'/>
    <xsd:element ref='UML:Include.base'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='namespace' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='clientDependency' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='constraint' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='targetFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='sourceFlow' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='comment' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='templateParameter' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='stereotype' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='taggedValue' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='addition' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='base' type='xsd:IDREFS' use='optional'/>
   <xsd:attribute name='name' type='xsd:string' use='optional'/>
   <xsd:attribute name='visibility' use='optional'>
    <xsd:simpleType>
     <xsd:restriction base='xsd:string'>
      <xsd:enumeration value='public'/>
      <xsd:enumeration value='protected'/>
      <xsd:enumeration value='private'/>
      <xsd:enumeration value='package'/>
     </xsd:restriction>
    </xsd:simpleType>
   </xsd:attribute>
   <xsd:attribute name='isSpecification' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:Use_Cases'>
  <xsd:complexType>
   <xsd:choice minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='UML:UseCaseInstance'/>
    <xsd:element ref='UML:UseCase'/>
    <xsd:element ref='UML:Extend'/>
    <xsd:element ref='UML:Actor'/>
    <xsd:element ref='UML:Include'/>
    <xsd:element ref='UML:ExtensionPoint'/>
    <xsd:element ref='XMI.extension'/>
   </xsd:choice>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>

 <xsd:element name='UML:UML'>
  <xsd:complexType>
   <xsd:sequence minOccurs='0' maxOccurs='unbounded'>
    <xsd:element ref='XMI.extension'/>
   </xsd:sequence>
   <xsd:attribute name='xmi.id' type='xsd:ID' use='optional'/>
   <xsd:attribute name='xmi.label' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.uuid' type='xsd:string' use='optional'/>
   <xsd:attribute name='href' type='xsd:string' use='optional'/>
   <xsd:attribute name='xmi.idref' type='xsd:IDREF' use='optional'/>
  </xsd:complexType>
 </xsd:element>
</xsd:schema>
